{"version":3,"file":"annotorious-selector-pack.min.js","mappings":"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","sources":["webpack://Annotorious.SelectorPack/webpack/universalModuleDefinition","webpack://Annotorious.SelectorPack/../annotorious/node_modules/fast-deep-equal/index.js","webpack://Annotorious.SelectorPack/../annotorious/node_modules/tiny-emitter/index.js","webpack://Annotorious.SelectorPack/webpack/bootstrap","webpack://Annotorious.SelectorPack/webpack/runtime/compat get default export","webpack://Annotorious.SelectorPack/webpack/runtime/define property getters","webpack://Annotorious.SelectorPack/webpack/runtime/hasOwnProperty shorthand","webpack://Annotorious.SelectorPack/../annotorious/node_modules/uuid/dist/esm-browser/rng.js","webpack://Annotorious.SelectorPack/../annotorious/src/util/SVG.js","webpack://Annotorious.SelectorPack/../annotorious/node_modules/uuid/dist/esm-browser/regex.js","webpack://Annotorious.SelectorPack/../annotorious/node_modules/uuid/dist/esm-browser/validate.js","webpack://Annotorious.SelectorPack/../annotorious/node_modules/uuid/dist/esm-browser/stringify.js","webpack://Annotorious.SelectorPack/../annotorious/node_modules/uuid/dist/esm-browser/v4.js","webpack://Annotorious.SelectorPack/../annotorious/node_modules/@recogito/recogito-client-core/src/WebAnnotation.js","webpack://Annotorious.SelectorPack/../annotorious/node_modules/@recogito/recogito-client-core/src/Selection.js","webpack://Annotorious.SelectorPack/../annotorious/src/tools/Tool.js","webpack://Annotorious.SelectorPack/../annotorious/src/util/Touch.js","webpack://Annotorious.SelectorPack/../annotorious/src/selectors/EmbeddedSVG.js","webpack://Annotorious.SelectorPack/./src/circle/Circle.js","webpack://Annotorious.SelectorPack/./src/circle/CircleMask.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircle.js","webpack://Annotorious.SelectorPack/../annotorious/src/tools/EditableShape.js","webpack://Annotorious.SelectorPack/../annotorious/src/util/Formatting.js","webpack://Annotorious.SelectorPack/./src/circle/EditableCircle.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircleTool.js","webpack://Annotorious.SelectorPack/./src/ellipse/Ellipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EllipseMask.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EditableEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipseTool.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/EditableFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehandTool.js","webpack://Annotorious.SelectorPack/./src/multipolygon/RubberbandMultipolygon.js","webpack://Annotorious.SelectorPack/./src/multipolygon/EditableMultipolygon.js","webpack://Annotorious.SelectorPack/./src/multipolygon/RubberbandMultipolygonTool.js","webpack://Annotorious.SelectorPack/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Annotorious\"] = factory();\n\telse\n\t\troot[\"Annotorious\"] = root[\"Annotorious\"] || {}, root[\"Annotorious\"][\"SelectorPack\"] = factory();\n})(self, function() {\nreturn ","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nconst getClassNames = el => {\n  const attr = el.getAttribute('class');\n  return attr ? new Set(attr.split(' ')) : new Set();\n}\n\n// IE11 doesn't support adding/removing classes to SVG elements except \n// via .setAttribute\nexport const addClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.add(className);\n  el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const removeClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.delete(className);\n\n  if (classNames.size === 0)\n    el.removeAttribute('class');\n  else\n    el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const hasClass = (el, className) =>\n  getClassNames(el).has(className);","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\nexport default class WebAnnotation {\n\n  constructor(annotation, opts) {\n    this.underlying = annotation;\n    this.opts = opts;\n  }\n\n  /** For convenience - creates an empty web annotation **/\n  static create = args => {\n    const stub = {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`,\n      'body': []\n    };\n\n    return new WebAnnotation({ ...stub, ...args });\n  }\n\n  /** Creates a copy of this annotation **/\n  clone = (opt_props, opt_opts) => {\n    return new WebAnnotation({ ...this.underlying, ...opt_props}, { ...this.opts, ...opt_opts });\n  }\n\n  /** An equality check based on the underlying object **/\n  isEqual(other) {\n    if (other?.type !== 'Annotation') {\n      return false;\n    } else if (this.underlying === other.underlying) {\n      return true;\n    } else if (!this.underlying.id || !other.underlying.id) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n\n  get readOnly() {\n    return this.opts?.readOnly;\n  }\n\n  /*************************************/ \n  /* Getters to forward properties of  */\n  /* the underlying annotation         */\n  /*************************************/\n\n  get id() {\n    return this.underlying.id; \n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get motivation() {\n    return this.underlying.motivation;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  /** Same as .body, but guaranteed to return an array **/\n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  /** Only bodies are meant to be mutated by the application **/\n  set bodies(bodies) {\n    this.underlying.body = bodies;\n  }\n\n  /** Same as .target, but guaranteed to return an array **/\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n  \n  /*****************************************/ \n  /* Various access helpers and shorthands */\n  /*****************************************/\n\n  /** Selector of the given type **/\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector').exact;\n  }\n\n  /** Shorthand for the 'start' field of the TextPositionSelector **/\n  get start() {\n    return this.selector('TextPositionSelector').start;\n  }\n\n  /** Shorthand for the 'end' field of the TextPositionSelector **/\n  get end() {\n    return this.selector('TextPositionSelector').end;\n  }\n  \n}\n","import WebAnnotation from './WebAnnotation';\nimport { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\n/**\n * An \"annotation in draft mode\". Really the same\n * data structure, but as a separate class so we can\n * tell things apart properly.\n */\nexport default class Selection {\n\n  constructor(target, body) {\n    this.underlying = {\n      type: 'Selection',\n      body: body || [],\n      target\n    }\n  }\n\n  /** Creates a copy of this selection **/\n  clone = opt_props => {\n    // Deep-clone\n    const cloned = new Selection();\n    cloned.underlying = JSON.parse(JSON.stringify(this.underlying));  \n\n    if (opt_props)\n      cloned.underlying = { ...cloned.underlying, ...opt_props };\n\n    return cloned;\n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n\n  /** For consistency with WebAnnotation **/\n  isEqual(other) {\n    if (!other) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n  \n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector').exact;\n  }\n\n  /*******************************************/ \n  /* Selection-specific properties & methods */\n  /*******************************************/\n\n  get isSelection() {\n    return true;\n  }\n\n  toAnnotation = () => {\n    const a = Object.assign({}, this.underlying, {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`\n    });\n\n    return new WebAnnotation(a);\n  }\n\n}","import EventEmitter from 'tiny-emitter';\nimport { isTouchDevice } from '../util/Touch';\nimport { SVG_NAMESPACE } from '../util/SVG';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nconst isTouch = isTouchDevice();\n\n/**\n * A commmon base class for Tools and EditableShapes\n */\nexport class ToolLike extends EventEmitter {\n\n  constructor(g, config, env) {\n    super();\n\n    this.svg = g.closest('svg');\n\n    this.g = g;\n    this.config = config;\n    this.env = env;\n\n    // Default image scale\n    this.scale = 1;\n\n    // Bit of a hack. If we are dealing with a 'real' image, we enable\n    // reponsive mode. OpenSeadragon handles scaling in a different way,\n    // so we don't need responsive mode.\n    const { image } = env;\n    if (image instanceof Element || image instanceof HTMLDocument)\n      this.enableResponsive();\n  }\n\n  /**\n   * Implementations MAY extend this (calling super),\n   * to destroy SVG elements, mask, etc.\n   */\n  destroy() {\n    if (this.resizeObserver)\n      this.resizeObserver.disconnect();\n\n    this.resizeObserver = null;\n  }\n\n  enableResponsive = () => {\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => {\n        const svgBounds = this.svg.getBoundingClientRect();\n        const { width, height } = this.svg.viewBox.baseVal;\n\n        this.scale = Math.max(\n          width / svgBounds.width,\n          height / svgBounds.height\n        );\n\n        if (this.onScaleChanged)\n          this.onScaleChanged(this.scale);\n      });\n\n      this.resizeObserver.observe(this.svg.parentNode);\n    }\n  }\n\n  getSVGPoint = evt => {\n    const pt = this.svg.createSVGPoint();\n\n    if (isTouch) {\n      const bbox = this.svg.getBoundingClientRect();\n\n      const x = evt.clientX - bbox.x;\n      const y = evt.clientY - bbox.y;\n\n      const { left, top } = this.svg.getBoundingClientRect();\n      pt.x = x + left;\n      pt.y = y + top;\n\n      return pt.matrixTransform(this.g.getScreenCTM().inverse());\n    } else {\n      pt.x = evt.offsetX;\n      pt.y = evt.offsetY;\n\n      return pt.matrixTransform(this.g.getCTM().inverse());\n    }\n  }\n\n  /*********************************/\n  /*  Helpers for drawing handles  */\n  /*********************************/\n\n  drawHandle = (x, y) => {\n    const containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    containerGroup.setAttribute('class', 'a9s-handle');\n\n    const group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    const drawCircle = r => {\n      const c = document.createElementNS(SVG_NAMESPACE, 'circle');\n      c.setAttribute('cx', x);\n      c.setAttribute('cy', y);\n      c.setAttribute('r', r);\n      return c;\n    }\n\n    const radius = this.config.handleRadius || 6;\n\n    const inner = drawCircle(radius);\n    inner.setAttribute('class', 'a9s-handle-inner')\n\n    const outer = drawCircle(radius + 1);\n    outer.setAttribute('class', 'a9s-handle-outer')\n\n    group.appendChild(outer);\n    group.appendChild(inner);\n\n    containerGroup.appendChild(group);\n    return containerGroup;\n  }\n\n  setHandleXY = (handle, x, y) => {\n    const inner = handle.querySelector('.a9s-handle-inner');\n    inner.setAttribute('cx', x);\n    inner.setAttribute('cy', y);\n\n    const outer = handle.querySelector('.a9s-handle-outer');\n    outer.setAttribute('cx', x);\n    outer.setAttribute('cy', y);\n  }\n\n  getHandleXY = handle => {\n    const outer = handle.querySelector('.a9s-handle-outer');\n    return {\n      x: parseFloat(outer.getAttribute('cx')),\n      y: parseFloat(outer.getAttribute('cy'))\n    }\n  }\n\n  scaleHandle = handle => {\n    const inner = handle.querySelector('.a9s-handle-inner');\n    const outer = handle.querySelector('.a9s-handle-outer');\n\n    const radius = this.scale * (this.config.handleRadius || 6);\n\n    inner.setAttribute('r', radius);\n    outer.setAttribute('r', radius);\n  }\n\n}\n\n/**\n * Base class that adds some convenience stuff for tool plugins.\n */\nexport default class Tool extends ToolLike {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    // We'll keep a flag set to false until\n    // the user has started moving, so we can\n    // fire the startSelection event\n    this.started = false;\n  }\n\n  attachListeners = ({ mouseMove, mouseUp, dblClick }) => {\n    // Handle SVG conversion on behalf of tool implementations\n    if (mouseMove) {\n      this.mouseMove = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n\n        if (!this.started) {\n          this.emit('startSelection', { x, y });\n          this.started = true;\n        }\n\n        mouseMove(x, y, evt);\n      }\n\n      // Mouse move goes on SVG element\n      this.svg.addEventListener('mousemove', this.mouseMove);\n    }\n\n    if (mouseUp) {\n      this.mouseUp = evt => {\n        if (evt.button !== 0) return;  // left click\n        const { x , y } = this.getSVGPoint(evt);\n        mouseUp(x, y, evt);\n      }\n\n      // Mouse up goes on doc, so we capture events outside, too\n      document.addEventListener('mouseup', this.mouseUp);\n    }\n\n    if (dblClick) {\n      this.dblClick = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n        dblClick(x, y, evt);\n      }\n\n      document.addEventListener('dblclick', this.dblClick);\n    }\n\n  }\n\n  detachListeners = () => {\n    if (this.mouseMove)\n      this.svg.removeEventListener('mousemove', this.mouseMove);\n\n    if (this.mouseUp)\n      document.removeEventListener('mouseup', this.mouseUp);\n\n    if (this.dblClick)\n      document.removeEventListener('dblclick', this.dblClick);\n  }\n\n  /**\n   * If startOnSingleClick is true, the tool starts on single click\n   * as well as drag. If false, starting strictly requires drag!\n   */\n  start = (evt, startOnSingleClick) => {\n    // Handle SVG conversion on behalf of tool implementations\n    const { x , y } = this.getSVGPoint(evt);\n    this.startDrawing(x, y, startOnSingleClick, evt);\n  }\n\n  /**\n   * Tool implementations MUST override these\n   */\n\n  get isDrawing() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  startDrawing = evt => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  createEditableShape = (annotation, formatters) => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n}\n\n// In addition, Tool implementations need to implement the following static methods\n\n// Tool.identifier = '...'\n\nTool.supports = annotation => {\n  throw new Error(IMPLEMENTATION_MISSING);\n}\n\n// Just some convenience shortcuts to client-core, for quicker\n// importing in plugins. (In a way, the intention is to make the\n// Tool class serve as a kind of mini-SDK).\nexport { default as Selection } from '@recogito/recogito-client-core/src/Selection';\nexport { default as WebAnnotation } from '@recogito/recogito-client-core/src/WebAnnotation';\n","const SIM_EVENTS = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup'\n}\n\nexport const isTouchDevice = () =>\n  'ontouchstart' in window ||\n    navigator.maxTouchPoints > 0 ||\n      navigator.msMaxTouchPoints > 0;\n\nexport const enableTouchTranslation = el => {\n\n  let pressAndHoldTrigger = null;\n\n  const simulateEvent = (type, e) => new MouseEvent(type, {\n    screenX: e.screenX,\n    screenY: e.screenY,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    pageX: e.pageX,\n    pageY: e.pageY,\n    bubbles: true\n  });\n\n  const touchHandler = evt => {\n    const touch = evt.changedTouches[0];\n    const simulatedEvent = simulateEvent(SIM_EVENTS[evt.type], touch);\n\n    touch.target.dispatchEvent(simulatedEvent);\n    evt.preventDefault();\n\n    if (evt.type === 'touchstart' || evt.type === 'touchmove') {\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n\n      pressAndHoldTrigger = setTimeout(() => {\n        const simulatedEvent = simulateEvent('dblclick', touch);\n        touch.target.dispatchEvent(simulatedEvent);\n      }, 800);\n    }\n\n    if (evt.type === 'touchend')\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n  }\n\n  el.addEventListener('touchstart', touchHandler, true);\n  el.addEventListener('touchmove', touchHandler, true);\n  el.addEventListener('touchend', touchHandler, true);\n  el.addEventListener('touchcancel', touchHandler, true);\n\n}","import { SVG_NAMESPACE } from '../util/SVG';\n\n/** Helper that forces an un-namespaced node to SVG **/\nconst insertSVGNamespace = originalDoc => {\n  // Serialize and parse for the namespace to take effect on every node\n  const serializer = new XMLSerializer();\n  const str = serializer.serializeToString(originalDoc.documentElement);\n\n  // Doesn't seem that there's a clean cross-browser way for this...\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\n\n  const parser = new DOMParser();\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\n  return namespacedDoc.documentElement;\n}\n\nconst sanitize = doc => {\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \n  // for the basic approach\n  const cleanEl = el => {\n    Array.from(el.attributes).forEach(attr => {\n      if (attr.name.startsWith('on'))\n        el.removeAttribute(attr.name)\n    });\n  }\n\n  // Remove script tags\n  const scripts = doc.getElementsByTagName('script');\n  Array.from(scripts).reverse().forEach(el =>\n    el.parentNode.removeChild(el));\n\n  // Remove on... attributes\n  cleanEl(doc);\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\n\n  return doc;\n}\n\nexport const svgFragmentToShape = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector) {\n    const parser = new DOMParser();\n\n    // Parse the XML document, assuming SVG\n    const { value } = selector;\n    const doc = parser.parseFromString(value, \"image/svg+xml\");\n\n    // SVG needs a namespace declaration - check if it's set or insert if not\n    const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\n    const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\n\n    if (isPrefixDeclared || isDefaultNamespaceSVG) {\n      return sanitize(doc).firstChild;\n    } else {\n      return sanitize(insertSVGNamespace(doc)).firstChild;\n    }\n  }\n}\n\nexport const drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n\n  return g;\n}\n\nexport const toSVGTarget = (shape, image) => {\n  const inner = shape.querySelector('.a9s-inner').cloneNode(true);\n  inner.removeAttribute('class');\n  inner.removeAttribute('xmlns');\n\n  let serialized = inner.outerHTML || new XMLSerializer().serializeToString(inner);\n  serialized = serialized.replace(` xmlns=\"${SVG_NAMESPACE}\"`, '');\n\n  return {\n    source: image?.src,\n    selector: {\n      type: \"SvgSelector\",\n      value: `<svg>${serialized}</svg>`\n    }\n  }\n}\n\nexport const svgArea = annotation => {\n  const shape = svgFragmentToShape(annotation);\n  const nodeName = shape.nodeName.toLowerCase();\n\n  if (nodeName === 'polygon') \n    return polygonArea(shape);\n  else if (nodeName === 'circle')\n    return circleArea(shape);\n  else if (nodeName === 'ellipse')\n    return ellipseArea(shape);\n  else if (nodeName == 'path')\n    return pathArea(shape);\n  else\n    throw `Unsupported SVG shape type: ${nodeName}`;\n}\n\nexport const getAreaOfPoints = points =>{\n  let area = 0;\n  let j = points.length - 1;\n\n  for (let i=0; i < points.length; i++) {\n    area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n    j = i;\n  }\n\n  return Math.abs(0.5 * area);\n}\n\nexport const pointInsidePoygon = (point, vs) => {\n  // Algorithm checks, if point is in Polygon\n  // algorithm based on\n  // https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\n  \n  var x = point[0], y = point[1];\n  \n  var inside = false;\n  for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0], yi = vs[i][1];\n      var xj = vs[j][0], yj = vs[j][1];\n      \n      var intersect = ((yi > y) != (yj > y))\n          && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n      if (intersect) inside = !inside;\n  }\n  \n  return inside;\n};\n\nexport const isHole = (polygon1, polygon2) => {\n  // Algorithm checks, if polygon1 is in polygon2\n  for (var point of polygon1){\n    if (!pointInsidePoygon(point, polygon2)) return false\n  }\n  return true;\n}\n\nconst polygonArea = polygon => {\n  const points = polygon.getAttribute('points')\n    .split(' ') // Split x/y tuples\n    .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n  return getAreaOfPoints(points)\n}\n\nconst circleArea = circle => {\n  const r = circle.getAttribute('r');\n  return r * r * Math.PI;\n}\n\nconst ellipseArea = ellipse => {\n  const rx = ellipse.getAttribute('rx');\n  const ry = ellipse.getAttribute('ry');\n  return rx * ry * Math.PI;\n}\n\nconst pathArea = path => {\n  if (path.getAttribute('d').toUpperCase().includes(\"Z\")){\n    var allcoords = path.getAttribute('d')\n    var polygons =allcoords.split('M');\n    var multiPolygon = []\n    polygons.forEach(function (polygon, index) {\n      if (polygon.length>0){\n        let coords = []\n        polygon=polygon.replace(/ Z/g,\"Z\")\n        polygon=polygon.replace(/Z /g,\"Z\")\n        polygon=polygon.replace(/Z/g,\"\")\n        polygon=polygon.replace(/L /g,\"L\")\n        polygon=polygon.replace(/ L/g,\"L\")\n        var coordsString = polygon.split(\"L\")\n        coordsString.forEach(function(coord, index){\n          coords.push([parseFloat(coord.split(\",\")[0]),parseFloat(coord.split(\",\")[1])]);\n        });\n        if (coords[0] !== coords[coords.length - 1]){\n          coords.push(coords[0])\n        }\n        // console.log(\"coords\",coords);\n        multiPolygon.push(coords)\n      }\n    })\nif (multiPolygon.length > 1){\n      var area = 0\n      for (let poly1 of multiPolygon) {\n        for (let poly2 of multiPolygon) {\n          if (poly1 !== poly2) {\n            if (isHole(poly1, poly2)) {\n              area -= getAreaOfPoints(poly1)\n            } else {\n              area += getAreaOfPoints(poly1)\n            }\n          }\n        }\n      }\n      return area\n    } else if (multiPolygon.length === 1){\n      return getAreaOfPoints(multiPolygon[0])\n    } else {\n      return 0\n    }\n  } else {\n    const pointList = path.getAttribute('d').split('L');\n    let area = 0;\n  \n    if(pointList.length > 1) {\n      var point = pointList[pointList.length - 1].trim().split(' ');\n      let lastX = parseFloat(point[0]);\n      let lastY = parseFloat(point[1]);\n  \n      point = pointList[0].substring(1).trim().split(' ');\n      let x = parseFloat(point[0]);\n      let y = parseFloat(point[1]);\n      area += (lastX + x) * (lastY - y);\n      lastX = x;\n      lastY = y;\n  \n      for (let i = 1; i < pointList.length; i++) {\n        point = pointList[i].trim().split(' ');\n        x = parseFloat(point[0]);\n        y = parseFloat(point[1]);\n        area += (lastX + x) * (lastY - y);\n        lastX = x;\n        lastY = y;\n      }\n    }\n  \n    return Math.abs(0.5 * area);\n  }\n\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, r) to the SVG shape **/\nconst setXYR = (shape, x, y, r) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('r', r);\n}\n\n/** \n * Draws an SVG circle, either from an annotation, or an\n * (cx, cy, r)-tuple.\n */\nexport const drawCircle = (cx, cy, r) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const outerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n  const innerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n\n  innerCircle.setAttribute('class', 'a9s-inner');\n  setXYR(innerCircle, cx, cy, r);\n\n  outerCircle.setAttribute('class', 'a9s-outer');\n  setXYR(outerCircle, cx, cy, r);\n\n  g.appendChild(outerCircle);\n  g.appendChild(innerCircle);\n\n  return g;\n}\n\nexport const setCircleSize = (g, cx, cy, r) => {\n  const innerCircle = g.querySelector('.a9s-inner');\n  const outerCircle = g.querySelector('.a9s-outer');\n  \n  setXYR(innerCircle, cx, cy, r);\n  setXYR(outerCircle, cx, cy, r);\n}\n\nexport const getCircleSize = g => {\n  const outerCircle = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerCircle.getAttribute('cx'));\n  const cy = parseFloat(outerCircle.getAttribute('cy'));\n  const r = parseFloat(outerCircle.getAttribute('r'));\n  \n  return { cx, cy, r };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getCircleSize } from './Circle';\n\nexport default class CircleMask {\n\n  constructor(imageDimensions, circle) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.circle = circle;\n\n    const { cx, cy, r } = getCircleSize(this.circle);\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawCircle, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * A 'rubberband' selection tool for creating a circle by\n * clicking and dragging.\n */\nexport default class RubberbandCircle {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawCircle(anchorX, anchorY, 2);\n    this.circle.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.circle);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.circle);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.circle;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    const { naturalWidth, naturalHeight } = this.env.image;\n\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n    const r = Math.max(1, Math.pow(w ** 2 + h ** 2, 0.5) / 2);\n\n    const cx = this.anchor[0] + w / 2;\n    const cy = this.anchor[1] + h / 2;\n\n    if ((cx-r < 0 || cx + r > naturalWidth) || (cy-r < 0 || cy + r > naturalHeight)) return;\n    \n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.circle.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.circle = null;\n    this.group = null;\n  }\n\n}","import { ToolLike } from './Tool';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nexport default class EditableShape extends ToolLike {\n\n  constructor(annotation, g, config, env) {\n    super(g, config, env);\n\n    this.annotation = annotation;\n  }\n  \n  /**\n   * Implementations MUST override this method!\n   * \n   * Must return the 'g' element with the a9s-annotation class.\n   */\n  get element() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  /**\n   * Implementations MUST override this method!\n   * \n   * The annotation argument MUST be used to update\n   * the current state of the shape. It MUST NOT\n   * be stored as 'this.annotation'! 'this.annotation'\n   * MUST remain the original annotation at the time\n   * this EditableShape was created, because we will\n   * need it again in case the user cancels editing.\n   * \n   * Thinking of it in React terms, 'this.annotation'\n   * has the same purpose as props.annotation, whereas\n   * this method affects state.\n   */\n  updateState = annotation => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n}\n","import { addClass, SVG_NAMESPACE } from './SVG';\n\nconst isFirefox = /firefox/i.test(navigator.userAgent);\n\nconst formatSvgEl = (svgEl, x, y, w, h) => {\n  svgEl.setAttribute('width', w);\n  svgEl.setAttribute('height', h);\n\n  // Argh - Firefox produces broken SVG bounds for nested SVG\n  if (isFirefox) {\n    svgEl.setAttribute('x', 0);\n    svgEl.setAttribute('y', 0);\n    svgEl.setAttribute('transform', `translate(${x}, ${y})`);  \n  } else {\n    svgEl.setAttribute('x', x);\n    svgEl.setAttribute('y', y);\n  }\n}\n\nconst appendFormatterEl = (formatterEl, shape) => {\n  const { x, y, width, height } = shape.getBBox();\n\n  const svgEl = document.createElementNS(SVG_NAMESPACE, 'svg');\n  svgEl.setAttribute('class', 'a9s-formatter-el');\n\n  formatSvgEl(svgEl, x, y, width, height);\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  g.appendChild(formatterEl);y\n\n  svgEl.appendChild(g);\n  \n  shape.append(svgEl);\n}\nexport const setCustomStyle = (shape, annotation) => {\n  if (annotation.getStyle){\n    const style = annotation.getStyle();\n    if (style){\n      for (var i = 0; i < shape.children.length; i++){\n        if (shape.children[i].classList.contains(\"a9s-inner\")){\n          for (let [key, value] of Object.entries(style.inner)){\n            shape.children[i].style[key] = value\n          }\n        } else if (shape.children[i].classList.contains(\"a9s-outer\")){\n          for (let [key, value] of Object.entries(style.outer)){\n            shape.children[i].style[key] = value\n          }\n        }\n      }\n    }  \n  }\n  return shape\n}\n/**\n * A formatter is a user-defined function that takes an annotation as input,\n * and returns either a string, or an object. If a string is returned, this\n * will be appended to the annotation element CSS class list. Otherwise, the\n * object can have the following properties: \n * \n * - 'className' added to the CSS class list\n * - 'data-*' added as data attributes\n * - 'style' a list of CSS styles (in the form of a string) \n */\nexport const format = (shape, annotation, formatters) => {\n  // The formatter can be undefined\n  if (!formatters)\n    return shape;\n\n  // Merge outputs from all formatter functions into one object\n  const format = formatters.reduce((merged, fn) => {\n    const format = fn(annotation);\n\n    if (!format)\n      return merged;\n\n    if (typeof format === 'string' || format instanceof String) {\n      merged.className = merged.className ? `${merged.className} ${format}` : format; \n    } else if (format.nodeType === Node.ELEMENT_NODE) {\n      merged.elements = merged.elements ? [...merged.elements, format] : [format];\n    } else {\n      const { className, style, element } = format;\n\n      if (className)\n        merged.className = merged.className ? `${merged.className} ${className}` : className;\n\n      if (style)\n        merged.style = merged.style ? `${merged.style} ${style}` : style;\n\n      if (element)\n        merged.elements = merged.elements ? [...merged.elements, element] : [element];\n    }\n\n    // Copy data attributes\n    for (const key in format) {\n      if (format.hasOwnProperty(key) && key.startsWith('data-')) {\n        merged[key] = format[key];\n      }\n    }\n\n    return merged;\n  }, {});\n\n  const { className, style, elements } = format;\n\n  if (className)\n    addClass(shape, className);\n\n  if (style) {\n    const outer = shape.querySelector('.a9s-outer');\n    const inner = shape.querySelector('.a9s-inner');\n\n    if (outer && inner) {\n      outer.setAttribute('style', 'display:none');\n      inner.setAttribute('style', style);\n    } else {\n      shape.setAttribute('style', style);\n    }\n  }\n\n  if (elements)\n    elements.forEach(el => appendFormatterEl(el, shape));\n\n  for (const key in format) {\n    if (format.hasOwnProperty(key) && key.startsWith('data-')) {\n      shape.setAttribute(key, format[key]);\n    }\n  }\n}\n\nexport const setFormatterElSize = (group, x, y, w, h) => {\n  const formatterEl = group.querySelector('.a9s-formatter-el');\n  if (formatterEl)\n    formatSvgEl(formatterEl, x, y, w, h);\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getCircleSize, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * An editable circle shape.\n */\nexport default class EditableCircle extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <circle class=\"a9s-outer\" ... />\n    //     <circle class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable circle compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawEmbeddedSVG(annotation);\n    this.circle.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.circle));\n\n    this.mask = new Mask(env.image, this.circle);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = circle + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.circle);    \n\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    this.handles = [\n      [ cx, cy - r ],\n      [ cx + r, cy ],\n      [ cx, cy + r ],\n      [ cx - r, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.circle, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, r) => {\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - r);\n    this.setHandleXY(topright, cx + r, cy);\n    this.setHandleXY(bottomright, cx, cy + r);\n    this.setHandleXY(bottomleft, cx - r, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var width = 0;\n    var height = 0;\n    var r;\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n      height = mouseY - anchor.y;\n      r = Math.abs(height) / 2;\n    } else {\n      mouseY = anchor.y;\n      width = mouseX - anchor.x;\n      r = Math.abs(width) / 2;\n    }\n\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - r);\n      this.setHandleXY(this.handles[idx2], cx, cy + r);\n      this.setHandleXY(this.handles[1], cx + r, cy);\n      this.setHandleXY(this.handles[3], cx - r, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + r, cy);\n      this.setHandleXY(this.handles[idx1], cx - r, cy);\n      this.setHandleXY(this.handles[0], cx, cy - r);\n      this.setHandleXY(this.handles[2], cx, cy + r);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n    \n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getCircleSize(this.circle);\n    \n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.circle) {\n        const { r } = getCircleSize(this.circle);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = Math.max(constrain(pos.x - this.grabbedAt.x, naturalWidth - r), r);\n        const cy = Math.max(constrain(pos.y - this.grabbedAt.y, naturalHeight - r), r);\n\n        this.setSize(cx, cy, r); \n        this.emit('update', toSVGTarget(this.circle, this.env.image)); \n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n        this.emit('update', toSVGTarget(this.circle, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const r =  parseFloat(shape.getAttribute('r'));\n\n    this.setSize(cx, cy, r);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandCircle from './RubberbandCircle';\nimport EditableCircle from './EditableCircle';\n\n/**\n * A rubberband selector for circle selections.\n */\nexport default class RubberbandCircleTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandCircle(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableCircle(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandCircleTool.identifier = 'circle';\n\nRubberbandCircleTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<circle/g);\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, rx, ry) to the SVG shape **/\nconst setXYR = (shape, x, y, rx, ry) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('rx', rx);\n  shape.setAttribute('ry', ry);\n}\n\n/** \n * Draws an SVG ellipse, either from an annotation, or an\n * (cx, cy, rx, ry)-tuple.\n */\nexport const drawEllipse = (cx, cy, rx, ry) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const innerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n  const outerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n\n  innerEllipse.setAttribute('class', 'a9s-inner');\n  setXYR(innerEllipse, cx, cy, rx, ry);\n\n  outerEllipse.setAttribute('class', 'a9s-outer');\n  setXYR(outerEllipse, cx, cy, rx, ry);\n\n  g.appendChild(outerEllipse);\n  g.appendChild(innerEllipse);\n\n  return g;\n}\n\nexport const setEllipseSize = (g, cx, cy, rx, ry) => {\n  const innerEllipse = g.querySelector('.a9s-inner');\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  setXYR(innerEllipse, cx, cy, rx, ry);\n  setXYR(outerEllipse, cx, cy, rx, ry);\n}\n\nexport const getEllipseSize = g => {\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerEllipse.getAttribute('cx'));\n  const cy = parseFloat(outerEllipse.getAttribute('cy'));\n  const rx = parseFloat(outerEllipse.getAttribute('rx'));\n  const ry = parseFloat(outerEllipse.getAttribute('ry'));\n  \n  return { cx, cy, rx, ry };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getEllipseSize } from './Ellipse';\n\nexport default class EllipseMask {\n\n  constructor(imageDimensions, ellipse) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.ellipse = ellipse;\n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawEllipse, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * A 'rubberband' selection tool for creating a ellipse by\n * clicking and dragging.\n */\nexport default class RubberbandEllipse {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEllipse(anchorX, anchorY, 2);\n    this.ellipse.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.ellipse);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.ellipse;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n\n    const cx = w > 0 ? this.anchor[0] + w / 2 : oppositeX + w / 2;\n    const cy = h > 0 ? this.anchor[1] + h / 2 : oppositeY + h / 2;\n\n    const rx = Math.abs(w / 2);\n    const ry = Math.abs(h / 2);\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.ellipse.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.ellipse = null;\n    this.group = null;\n  }\n\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getEllipseSize, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * An editable ellipse shape.\n */\nexport default class EditableEllipse extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <ellipse class=\"a9s-outer\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable ellipse compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEmbeddedSVG(annotation);\n    this.ellipse.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.ellipse));\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = ellipse + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.ellipse);    \n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    this.handles = [\n      [ cx, cy - ry ],\n      [ cx + rx, cy ],\n      [ cx, cy + ry ],\n      [ cx - rx, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.ellipse, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, rx, ry) => {\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - ry);\n    this.setHandleXY(topright, cx + rx, cy);\n    this.setHandleXY(bottomright, cx, cy + ry);\n    this.setHandleXY(bottomleft, cx - rx, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, leftHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n    const anchorLeft = this.getHandleXY(leftHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var rx = 0;\n    var ry = 0;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n    } else {\n      mouseY = anchor.y;\n    }\n\n    const width = mouseX - anchor.x;\n    const height = mouseY - anchor.y;\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n    var rx = w/2;\n    var ry = h/2;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      rx = Math.abs(anchor.x - anchorLeft.x);\n    } else {\n      ry = Math.abs(anchor.y - anchorLeft.y);\n    }\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - ry);\n      this.setHandleXY(this.handles[idx2], cx, cy + ry);\n      this.setHandleXY(this.handles[1], cx + rx, cy);\n      this.setHandleXY(this.handles[3], cx - rx, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + rx, cy);\n      this.setHandleXY(this.handles[idx1], cx - rx, cy);\n      this.setHandleXY(this.handles[0], cx, cy - ry);\n      this.setHandleXY(this.handles[2], cx, cy + ry);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n\n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getEllipseSize(this.ellipse);\n\n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.ellipse) {\n        const { rx, ry } = getEllipseSize(this.ellipse);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = constrain(pos.x - this.grabbedAt.x, naturalWidth - rx);\n        const cy = constrain(pos.y - this.grabbedAt.y, naturalHeight - ry);\n\n        this.setSize(cx, cy, rx, ry); \n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n        const leftHandle = this.handles[(handleIdx + 3) % 4];\n\n        this.stretchCorners(handleIdx, oppositeHandle, leftHandle, pos);\n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const rx = parseFloat(shape.getAttribute('rx'));\n    const ry = parseFloat(shape.getAttribute('ry'));\n    \n    this.setSize(cx, cy, rx, ry);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandEllipse from './RubberbandEllipse';\nimport EditableEllipse from './EditableEllipse';\n\n/**\n * A rubberband selector for ellipse selections.\n */\nexport default class RubberbandEllipseTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandEllipse(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableEllipse(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandEllipseTool.identifier = 'ellipse';\n\nRubberbandEllipseTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<ellipse/g);\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\n/**\n * A 'rubberband' selection tool for creating freehand drawing by\n * clicking and dragging.\n */\nexport default class RubberbandFreehand {\n\n  constructor(anchor, g, env) {\n    this.points = [ anchor ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.freehand = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.freehand.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.inner);\n\n    this.freehand.appendChild(this.outer);\n    this.freehand.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n   // TODO optional: mask to dim the outside area\n   // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.freehand);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var str = points.map(pt => `L${pt[0]} ${pt[1]}`).join(' ');\n    str = 'M' + str.substring(1);\n    this.outer.setAttribute('d', str);\n    this.inner.setAttribute('d', str);\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n\n    //TODO optional: edge smoothing\n\n    this.addPoint(xy);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  addPoint = xy => {\n    this.points = [ ...this.points, xy ];\n    this.setPoints(this.points);   \n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  get element() {\n    return this.freehand;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.freehand = null;    \n    this.group = null;\n  }\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n}\n","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\nconst getPoints = shape => {\n  const pointList = shape.getAttribute('d').split('L');\n  const points = [];\n  if(pointList.length > 0) {\n    var point = pointList[0].substring(1).trim().split(' ');\n    points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n\n    for (let i = 1; i < pointList.length; i++) {\n      var point = pointList[i].trim().split(' ');\n      points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n    }\n  }\n\n  return points;\n}\n\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\n\n/**\n * An editable freehand drawing.\n */\nexport default class EditableFreehand extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    // Not using .toFixed(1) because that will ALWAYS\n    // return one decimal, e.g. \"15.0\" (when we want \"15\")\n    const round = num => Math.round(10 * num) / 10;\n\n    var str = points.map(pt => `L${round(pt.x)} ${round(pt.y)}`).join(' ');\n    str = 'M' + str.substring(1);\n\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    const { x, y, width, height } = outer.getBBox();\n\n    // TODO optional: mask to dim the outside area\n    // this.mask.redraw();\n\n    // TODO optional: handles to stretch the shape\n/*    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n\n    this.setHandleXY(topleft, x, y);\n    this.setHandleXY(topright, x + width, y);\n    this.setHandleXY(bottomright, x + width, y + height);\n    this.setHandleXY(bottomleft, x, y + height);*/\n\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, delta, max) =>\n      coord + delta < 0 ? -coord : (coord + delta > max ? max - coord : delta);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      const { x, y, width, height } = getBBox(this.shape);\n\n      if (this.grabbedElem === this.shape) {\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const dx = constrain(x, pos.x - this.grabbedAt.x, naturalWidth - width);\n        const dy = constrain(y, pos.y - this.grabbedAt.y, naturalHeight - height);\n\n        const inner = this.shape.querySelector('.a9s-inner');\n        const updatedPoints = getPoints(inner).map(pt => ({ x: pt.x + dx, y: pt.y + dy }));\n\n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }\n      // TODO optional: handles to stretch the shape\n      /* else {\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }*/\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    const points = getPoints(svgFragmentToShape(annotation));\n    this.setPoints(points);\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandFreehand from './RubberbandFreehand';\nimport EditableFreehand from './EditableFreehand';\n\n/**\n * A rubberband selector for freehand fragments.\n */\nexport default class RubberbandFreehandTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandFreehand([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y) => {\n    this.onDblClick(x, y);\n  }\n\n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    this.detachListeners();\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth || height >= minHeight) {\n\n      const shape = this.rubberband.element;\n      shape.annotation = this.rubberband.toSelection();\n\n      this.emit('complete', shape);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation =>\n    new EditableFreehand(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandFreehandTool.identifier = 'freehand';\n\nRubberbandFreehandTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return (selector.value?.match(/^<svg.*<path*/g) && !selector.value.toUpperCase().includes(\"Z\"));\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n//import Mask from './MultipolygonMask';\n// TODO optional: mask to dim the outside area\n//import Mask from './multipolygonMask';\n\n/**\n * A 'rubberband' selection tool for creating multipolygon drawing by\n * clicking and dragging.\n */\nexport default class RubberbandMultipolygon {\n\n  constructor(anchor, g, env) {\n    this.points = [];\n    this.points.push([ anchor, anchor ])\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.multipolygon = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.multipolygon.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n    //this.mask = new Mask(env.image, this.inner);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.inner);\n\n    this.multipolygon.appendChild(this.outer);\n    this.multipolygon.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    // TODO optional: mask to dim the outside area\n    // this.group.appendChild(this.mask.element);\n    //this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.multipolygon);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var attr =\"\";\n    for (var ps of points){\n      var attr2=\"\"\n      if (ps.length>0){\n        for (var p of ps) {\n          if (p){\n            if (attr2===\"\"){\n              attr2  +=`M${p[0]},${p[1]}`;\n            }\n            else{\n              attr2  +=` L${p[0]},${p[1]}`;\n            }\n          }\n        };\n         attr+=attr2\n      }\n    }\n    attr+=\" Z\"\n    this.outer.setAttribute('d', attr);\n    this.inner.setAttribute('d', attr);\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n    dragTo = xy => {\n      // Make visible\n      this.group.style.display = null;\n      const head = this.points[this.points.length - 1].slice(0, this.points[this.points.length - 1].length - 1);\n      var headRest=this.points.slice(0,-1)\n      const rubberband = [ ...head, xy, head[0] ];\n      headRest.push(rubberband)\n      this.setPoints(headRest);\n      //this.mask.redraw();\n    }\n  \n  addPoint = xy => {\n    // Don't add a new point if distance < 2 pixels\n    // console.log(\"Entering addpoint\", this.points[this.points.length - 1].length);\n    if (this.points[this.points.length - 1].length>0){\n      const head = this.points[this.points.length - 1].slice(0, this.points[this.points.length - 1].length - 1);\n      const lastCorner = head[head.length - 1];\n      const dist = Math.pow(xy[0] - lastCorner[0], 2) + Math.pow(xy[1] - lastCorner[1], 2);\n      if (dist > 4) {\n        this.points[this.points.length - 1] = [ ...head, xy, head[0] ];\n        this.setPoints(this.points);   \n        //this.mask.redraw();\n      } \n    } else{\n      this.points[this.points.length - 1] = [xy,xy];\n      // console.log(this.points[this.points.length - 1]);\n      this.setPoints(this.points);\n    }\n  }\n  undo = () => {\n    console.log(\"last\",this.points[this.points.length - 1].length);\n    if (this.points[this.points.length - 1].length>2){\n      this.points[this.points.length - 1].pop();\n    } else {\n      if (this.points.length>1){\n        this.points.pop()\n      }\n    }\n  }\n  newPart = () => {\n    // console.log(\"NewPart triggered\");\n    this.points.push([]);\n    // console.log(\"points after newPart: \", this.points);\n  }\n \n  get element() {\n    return this.multipolygon;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.multipolygon = null;    \n    this.group = null;\n  }\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n}\n","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\n// TODO optional: mask to dim the outside area\n//import Mask from './MultipolygonMask';\n\nconst getPoints = (shape) => {\n  // Could just be Array.from(shape.querySelector('.inner').points) but...\n  // IE11 :-(\n    const pointLists = getPointsFromPathValue(shape.querySelector('.a9s-inner').attributes.d.nodeValue)\n  const pointArray = [];\n  for (let pointList of pointLists) {\n    let points = []\n    for (let point of pointList) {\n      let p = {\n        x:parseFloat(point[0]),\n        y:parseFloat(point[1])\n      }\n      points.push(p);\n    }\n    pointArray.push(points)\n    // console.log(\"pointList\",pointArray);\n  }\n  // console.log(\"points are:\", pointArray);\n  return pointArray;\n}\nconst getPointsFromPathValue = polygon => {\n  var results =polygon.split('M');\n  var allcoords = []\n  results.forEach(function (result, index) {\n    if (result.length>0){\n      let coords = []\n      result=result.replace(/ Z/g,\"Z\")\n      result=result.replace(/Z /g,\"Z\")\n      result=result.replace(/Z/g,\"\")\n      result=result.replace(/L /g,\"L\")\n      result=result.replace(/ L/g,\"L\")\n      var coordsString = result.split(\"L\")\n      coordsString.forEach(function(coord, index){\n        coords.push([parseFloat(coord.split(\",\")[0]).toFixed(2).toString(),parseFloat(coord.split(\",\")[1]).toFixed(2).toString()]);\n      });\n      if (coords[0] !== coords[coords.length - 1]){\n        coords.push(coords[0])\n      }\n      allcoords.push(coords)\n    }\n  });\n  return allcoords\n}\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\nexport const svgFragmentToPoints = annotation => {\n  const svgShape = svgFragmentToShape(annotation);\n  var polygon = svgShape.getAttribute('d')\n  var allcoords =  getPointsFromPathValue(polygon)\n  return allcoords\n  //svgShape.getAttribute('d')\n  //  .split(' ') // Split x/y tuples\n  //  .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n}\n\nconst drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n  // console.log(\"shape is\",shape);\n  // Hack\n  svgFragmentToPoints(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n  console.log(\"g\",g);\n  return g;\n}\n/**\n * An editable multipolygon drawing.\n */\nexport default class EditableMultipolygon extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n    console.log(\"editableMultipolygon initiated.\");\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n    let pointList = getPoints(this.shape);\n    this.handles = []\n    for (let points of pointList){\n      this.handles.push(points.map(pt => {\n        const handle = this.drawHandle(pt.x, pt.y);\n        handle.addEventListener('mousedown', this.onGrab(handle));\n        this.elementGroup.appendChild(handle);\n        return handle;\n      }))\n    } \n\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    const round = num =>\n    Math.round(10 * num) / 10;\n    // const str = points.map(pt => `${pt.x},${pt.y}`).join();\n    let str = \"\"\n    // console.log(\"incomming points\",points);\n    for (let pointList of points){\n      str += \"M\"\n      let first = true \n      for (let point of pointList){\n        if (first){\n          first = false\n          str += point.x.toString() + \",\" + point.y.toString()\n        } else {\n          str += \" L\" + round(point.x).toString() + \",\" + round(point.y).toString()\n        }\n      }\n      str += \" Z\"\n    }\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    // this.mask.redraw();\n\n    const { x, y, width, height } = outer.getBBox();\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    if (this.grabbedElem) {\n      // console.log(\"grabbedElm\", this.grabbedElem);\n      const pos = this.getSVGPoint(evt);\n      // console.log(\"shape\",this.shape);\n      if (this.grabbedElem === this.shape) {\n        const dx = pos.x - this.grabbedAt.x;\n        const dy = pos.y - this.grabbedAt.y;\n        // console.log(\"this.grabbedAt.x\",this.grabbedAt.x);\n        // console.log(\"this.grabbedAt.y\",this.grabbedAt.y);\n        let pointList = getPoints(this.shape)\n        // console.log(\"pointList\",pointList);\n        const updatedPoints = []\n        for (let points of pointList){\n          updatedPoints.push(points.map(pt =>\n            ({ x: pt.x + dx, y: pt.y + dy })))\n        } \n    \n        // console.log(\"updatedpoints\",updatedPoints);\n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n        let i = 0\n        for (let updatedPointsList of updatedPoints){\n            updatedPointsList.forEach((pt, idx) => {\n              if (this.handles[i][idx] !== undefined){\n                this.setHandleXY(this.handles[i][idx], pt.x, pt.y)\n              } \n            });\n            i+=1\n        }\n        \n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      } else {\n        let handleIdx = -1\n        let pointListIDX = 0\n        let found = false\n        // console.log(\"this.shape\",this.shape);\n        for (let handle of this.handles){\n          if (handle.indexOf(this.grabbedElem)>0){\n            handleIdx = handle.indexOf(this.grabbedElem);\n            // console.log(\"found grabbedElem\", this.grabbedElem);\n            // console.log(\"in:\", handle);\n            found=true\n          } else {\n            if (!found){\n              pointListIDX += 1\n            }\n          }\n        }\n        // console.log(\"handleIdx\",handleIdx);\n        // console.log(\"pointListIDX\",pointListIDX);\n      let pointList = getPoints(this.shape)\n        // console.log(\"pointsList\",pointList);\n        const updatedPoints = []\n        let updatedPointsIDX = 0\n        for (let points of pointList){\n          if (updatedPointsIDX === pointListIDX){\n            let newPoints = []\n            points.forEach(function (value, i) {\n              // console.log(\"i:\",i,\"handleIDx\",handleIdx);\n              if (i === handleIdx){\n                // console.log(\"found new pos\");\n                newPoints.push(pos)\n              } else {\n                newPoints.push(value)\n              }\n            });\n            updatedPoints.push(newPoints)\n//            updatedPoints.push(points.map((pt, idx) =>\n//            (idx === handleIdx) ? pos : pt))  \n          } else {\n            updatedPoints.push(points)\n          }\n          // console.log(\"updatedPoints after itteration:\",updatedPoints);\n          updatedPointsIDX +=1\n        } \n\n        // console.log(\"updatedpoints\",updatedPoints);\n        \n        this.setPoints(updatedPoints);\n        updatedPointsIDX = 0\n        for (let handle of this.handles){\n          if (updatedPointsIDX === pointListIDX){\n\n            this.setHandleXY(handle[handleIdx], pos.x, pos.y);\n          }\n          updatedPointsIDX +=1\n\n        }\n        \n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    const points = getPoints(svgFragmentToShape(annotation));\n    this.setPoints(points);\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandMultipolygon from './RubberbandMultipolygon';\nimport EditableMultipolygon from './EditableMultipolygon';\n\n/**\n * A rubberband selector for Multipolygon fragments.\n */\nexport default class RubberbandMultipolygonTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n    this._isDrawing = false;\n    document.addEventListener('keydown', evt => {\n      //console.log(\"keyDown Driggered\",evt);\n      if (evt.key == \"z\" && evt.ctrlKey) {\n        // console.log(\"doing undo\");\n        this.undo();\n      }\n      if (evt.key == 'n') {\n        //console.log(\"n recognized\");\n        this.newPart();\n      }\n    });  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandMultipolygon([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n  undo = () =>{\n    // console.log(\"rubberband undo\",this.rubberband);\n    if (this.rubberband){\n      this.rubberband.undo();\n\n    }\n    //console.log(this);\n  }\n  newPart = () =>{\n    if (this.rubberband){\n      this.rubberband.newPart();\n\n    }\n    //console.log(this);\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y, evt) => {\n    if (evt.altKey){\n      this.onDblClick(evt);\n    } else if (evt.ctrlKey) {\n      this.rubberband.undo();\n    } else{\n      const { width, height } = this.rubberband.getBoundingClientRect();\n\n      const minWidth = this.config.minSelectionWidth || 4;\n      const minHeight = this.config.minSelectionHeight || 4;\n      \n      if (width >= minWidth || height >= minHeight) {\n        this.rubberband.addPoint([ x, y ]);\n      } else {\n        this.emit('cancel');\n        this.stop();\n      }\n    }\n  }\n  \n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    const shape = this.rubberband.element;\n    shape.annotation = this.rubberband.toSelection();\n    this.emit('complete', shape);\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation => \n    new EditableMultipolygon(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandMultipolygonTool.identifier = 'multipolygon';\n\nRubberbandMultipolygonTool.supports = annotation => {\n  console.log(\"supports started\");\n  const selector = annotation.selector('SvgSelector');\n  console.log(\"selector\", selector);\n  console.log(selector.value?.match(/^<svg.*<path d=/g))\n  if (selector)\n    return selector.value?.match(/^<svg.*<path d=/g);\n}","import RubberbandCircleTool from './circle/RubberbandCircleTool';\nimport RubberbandEllipseTool from './ellipse/RubberbandEllipseTool';\nimport RubberbandFreehandTool from './freehand/RubberbandFreehandTool';\nimport RubberbandMultipolygonTool from './multipolygon/RubberbandMultipolygonTool';\n\nconst ALL_TOOLS = new Set([\n  'circle',\n  'ellipse',\n  'freehand',\n  'multipolygon'\n]);\n\nconst SelectorPack = (anno, config) => {\n\n  // Add configured tools, or all\n  const useTools = config?.tools ? \n    new Set(config.tools.map(t => t.toLowerCase())) : ALL_TOOLS;\n\n  if (useTools.has('circle'))\n    anno.addDrawingTool(RubberbandCircleTool);\n\n  if (useTools.has('ellipse'))\n    anno.addDrawingTool(RubberbandEllipseTool);\n  \n  if (useTools.has('freehand'))\n    anno.addDrawingTool(RubberbandFreehandTool);\n\n  if (useTools.has('multipolygon'))\n    anno.addDrawingTool(RubberbandMultipolygonTool);\n\n}\n\nexport default SelectorPack;\n"],"names":["root","factory","exports","module","define","amd","self","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","E","on","name","callback","ctx","e","this","push","fn","once","listener","off","apply","arguments","_","emit","data","slice","evtArr","len","evts","liveEvents","TinyEmitter","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","getRandomValues","SVG_NAMESPACE","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","substr","options","buf","offset","rnds","random","arr","toLowerCase","validate","TypeError","stringify","WebAnnotation","annotation","opts","opt_props","opt_opts","underlying","type","target","selector","find","s","other","id","equals","readOnly","motivation","body","bodies","exact","start","end","args","stub","Selection","cloned","JSON","parse","assign","IMPLEMENTATION_MISSING","isTouch","window","navigator","maxTouchPoints","msMaxTouchPoints","ToolLike","g","config","env","ResizeObserver","resizeObserver","svgBounds","svg","getBoundingClientRect","viewBox","baseVal","width","height","scale","Math","max","onScaleChanged","observe","parentNode","evt","pt","createSVGPoint","bbox","x","clientX","y","clientY","left","top","matrixTransform","getScreenCTM","inverse","offsetX","offsetY","getCTM","containerGroup","document","createElementNS","setAttribute","group","drawCircle","r","c","radius","handleRadius","inner","outer","appendChild","handle","querySelector","parseFloat","getAttribute","closest","image","Element","HTMLDocument","enableResponsive","disconnect","EventEmitter","Tool","mouseMove","mouseUp","dblClick","getSVGPoint","started","addEventListener","button","removeEventListener","startOnSingleClick","startDrawing","formatters","supports","sanitize","doc","cleanEl","el","from","attributes","forEach","attr","startsWith","removeAttribute","scripts","getElementsByTagName","reverse","removeChild","querySelectorAll","svgFragmentToShape","originalDoc","namespaced","parser","DOMParser","value","parseFromString","isPrefixDeclared","lookupPrefix","isDefaultNamespaceSVG","lookupNamespaceURI","firstChild","XMLSerializer","serializeToString","documentElement","replace","drawEmbeddedSVG","shape","cloneNode","toSVGTarget","serialized","outerHTML","src","setXYR","setCircleSize","cx","cy","innerCircle","outerCircle","getCircleSize","CircleMask","imageDimensions","circle","tx","w","ty","h","mask","naturalWidth","naturalHeight","RubberbandCircle","anchorX","anchorY","oppositeX","oppositeY","style","display","anchor","pow","redraw","Mask","pointerEvents","element","EditableShape","isFirefox","test","userAgent","formatSvgEl","svgEl","format","reduce","merged","String","className","nodeType","Node","ELEMENT_NODE","elements","classNames","Set","split","getClassNames","add","join","addClass","formatterEl","getBBox","append","appendFormatterEl","setFormatterElSize","EditableCircle","elementGroup","handles","topleft","topright","bottomright","bottomleft","setHandleXY","draggedHandleIdx","anchorHandle","mousePos","getHandleXY","mouseX","mouseY","abs","idx0","idx2","idx3","idx1","grabbedElem","pos","grabbedAt","constrain","coord","setSize","handleIdx","indexOf","oppositeHandle","stretchCorners","onMouseMove","onMouseUp","onGrab","map","t","drawHandle","formatter","RubberbandCircleTool","attachListeners","rubberband","destroy","dragTo","detachListeners","minWidth","minSelectionWidth","minHeight","minSelectionHeight","toSelection","stop","identifier","match","rx","ry","setEllipseSize","innerEllipse","outerEllipse","getEllipseSize","EllipseMask","ellipse","RubberbandEllipse","drawEllipse","EditableEllipse","leftHandle","anchorLeft","RubberbandEllipseTool","RubberbandFreehand","points","str","substring","xy","addPoint","setPoints","freehand","getPoints","pointList","point","trim","EditableFreehand","round","num","delta","dx","dy","updatedPoints","RubberbandFreehandTool","_isDrawing","onDblClick","toUpperCase","includes","RubberbandMultipolygon","ps","attr2","p","head","headRest","lastCorner","console","log","pop","multipolygon","pointArray","getPointsFromPathValue","nodeValue","polygon","results","allcoords","result","index","coords","toFixed","EditableMultipolygon","first","idx","pointListIDX","found","updatedPointsIDX","newPoints","svgFragmentToPoints","RubberbandMultipolygonTool","undo","newPart","altKey","ctrlKey","ALL_TOOLS","anno","useTools","tools","has","addDrawingTool"],"sourceRoot":""}