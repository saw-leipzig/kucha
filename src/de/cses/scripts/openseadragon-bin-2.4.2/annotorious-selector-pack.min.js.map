{"version":3,"file":"annotorious-selector-pack.min.js","mappings":"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","sources":["webpack://Annotorious.SelectorPack/webpack/universalModuleDefinition","webpack://Annotorious.SelectorPack/./node_modules/rbush/rbush.min.js","webpack://Annotorious.SelectorPack/../annotorious/node_modules/tiny-emitter/index.js","webpack://Annotorious.SelectorPack/../recogito-client-core/node_modules/fast-deep-equal/index.js","webpack://Annotorious.SelectorPack/webpack/bootstrap","webpack://Annotorious.SelectorPack/webpack/runtime/compat get default export","webpack://Annotorious.SelectorPack/webpack/runtime/define property getters","webpack://Annotorious.SelectorPack/webpack/runtime/hasOwnProperty shorthand","webpack://Annotorious.SelectorPack/../recogito-client-core/node_modules/uuid/dist/esm-browser/rng.js","webpack://Annotorious.SelectorPack/../annotorious/src/util/Touch.js","webpack://Annotorious.SelectorPack/../annotorious/src/util/SVG.js","webpack://Annotorious.SelectorPack/../recogito-client-core/node_modules/uuid/dist/esm-browser/regex.js","webpack://Annotorious.SelectorPack/../recogito-client-core/node_modules/uuid/dist/esm-browser/stringify.js","webpack://Annotorious.SelectorPack/../recogito-client-core/node_modules/uuid/dist/esm-browser/validate.js","webpack://Annotorious.SelectorPack/../recogito-client-core/node_modules/uuid/dist/esm-browser/v4.js","webpack://Annotorious.SelectorPack/../recogito-client-core/src/WebAnnotation.js","webpack://Annotorious.SelectorPack/../recogito-client-core/src/Selection.js","webpack://Annotorious.SelectorPack/../annotorious/src/tools/Tool.js","webpack://Annotorious.SelectorPack/../annotorious/src/tools/EditableShape.js","webpack://Annotorious.SelectorPack/../annotorious/src/selectors/RectFragment.js","webpack://Annotorious.SelectorPack/./src/point/Point.js","webpack://Annotorious.SelectorPack/./src/point/EditablePoint.js","webpack://Annotorious.SelectorPack/./src/point/PointTool.js","webpack://Annotorious.SelectorPack/../annotorious/src/selectors/EmbeddedSVG.js","webpack://Annotorious.SelectorPack/./src/circle/Circle.js","webpack://Annotorious.SelectorPack/./src/circle/CircleMask.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircle.js","webpack://Annotorious.SelectorPack/../annotorious/src/util/Formatting.js","webpack://Annotorious.SelectorPack/./src/circle/EditableCircle.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircleTool.js","webpack://Annotorious.SelectorPack/./src/ellipse/Ellipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EllipseMask.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EditableEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipseTool.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/EditableFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehandTool.js","webpack://Annotorious.SelectorPack/./src/multipolygon/RubberbandMultipolygon.js","webpack://Annotorious.SelectorPack/./src/multipolygon/EditableMultipolygon.js","webpack://Annotorious.SelectorPack/./src/multipolygon/RubberbandMultipolygonTool.js","webpack://Annotorious.SelectorPack/./src/betterMultipolygon/RubberbandBetterMultipolygon.js","webpack://Annotorious.SelectorPack/../annotorious/src/util/Geom2D.js","webpack://Annotorious.SelectorPack/./src/betterMultipolygon/EditableBetterMultipolygon.js","webpack://Annotorious.SelectorPack/./src/betterMultipolygon/RubberbandBetterMultipolygonTool.js","webpack://Annotorious.SelectorPack/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Annotorious\"] = factory();\n\telse\n\t\troot[\"Annotorious\"] = root[\"Annotorious\"] || {}, root[\"Annotorious\"][\"SelectorPack\"] = factory();\n})(self, () => {\nreturn ","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","const SIM_EVENTS = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup'\n}\n\nexport const isTouchDevice = () =>\n  'ontouchstart' in window ||\n    navigator.maxTouchPoints > 0 ||\n      navigator.msMaxTouchPoints > 0;\n\nexport const enableTouchTranslation = el => {\n\n  let pressAndHoldTrigger = null;\n\n  const simulateEvent = (type, e) => new MouseEvent(type, {\n    screenX: e.screenX,\n    screenY: e.screenY,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    pageX: e.pageX,\n    pageY: e.pageY,\n    bubbles: true\n  });\n\n  const touchHandler = evt => {\n    const touch = evt.changedTouches[0];\n    const simulatedEvent = simulateEvent(SIM_EVENTS[evt.type], touch);\n\n    touch.target.dispatchEvent(simulatedEvent);\n    evt.preventDefault();\n\n    if (evt.type === 'touchstart' || evt.type === 'touchmove') {\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n\n      pressAndHoldTrigger = setTimeout(() => {\n        const simulatedEvent = simulateEvent('dblclick', touch);\n        touch.target.dispatchEvent(simulatedEvent);\n      }, 800);\n    }\n\n    if (evt.type === 'touchend')\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n  }\n\n  el.addEventListener('touchstart', touchHandler, true);\n  el.addEventListener('touchmove', touchHandler, true);\n  el.addEventListener('touchend', touchHandler, true);\n  el.addEventListener('touchcancel', touchHandler, true);\n\n}","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nconst getClassNames = el => {\n  const attr = el.getAttribute('class');\n  return attr ? new Set(attr.split(' ')) : new Set();\n}\n\n// IE11 doesn't support adding/removing classes to SVG elements except \n// via .setAttribute\nexport const addClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.add(className);\n  el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const removeClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.delete(className);\n\n  if (classNames.size === 0)\n    el.removeAttribute('class');\n  else\n    el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const hasClass = (el, className) =>\n  getClassNames(el).has(className);","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\nexport default class WebAnnotation {\n\n  constructor(annotation, opts) {\n    this.underlying = annotation;\n    this.opts = opts;\n  }\n\n  /** For convenience - creates an empty web annotation **/\n  static create = args => {\n    const stub = {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`,\n      'body': []\n    };\n\n    return new WebAnnotation({ ...stub, ...args });\n  }\n\n  /** Creates a copy of this annotation **/\n  clone = (opt_props, opt_opts) => {\n    return new WebAnnotation({ ...this.underlying, ...opt_props}, { ...this.opts, ...opt_opts });\n  }\n\n  /** An equality check based on the underlying object **/\n  isEqual(other) {\n    if (other?.type !== 'Annotation') {\n      return false;\n    } else if (this.underlying === other.underlying) {\n      return true;\n    } else if (!this.underlying.id || !other.underlying.id) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n  getStyle(){\n    return this.opts?.style;\n  }\n  get readOnly() {\n    return this.opts?.readOnly;\n  }\n\n  /*************************************/ \n  /* Getters to forward properties of  */\n  /* the underlying annotation         */\n  /*************************************/\n\n  get id() {\n    return this.underlying.id; \n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get motivation() {\n    return this.underlying.motivation;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  /** Same as .body, but guaranteed to return an array **/\n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  setState(state){\n    for (const [key, value] of Object.entries(state)){\n      this.opts[key] = value;\n    }\n  }\n\n  /** Only bodies are meant to be mutated by the application **/\n  set bodies(bodies) {\n    this.underlying.body = bodies;\n  }\n\n  /** Same as .target, but guaranteed to return an array **/\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n  \n  /*****************************************/ \n  /* Various access helpers and shorthands */\n  /*****************************************/\n\n  /** Selector of the given type **/\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector').exact;\n  }\n\n  /** Shorthand for the 'start' field of the TextPositionSelector **/\n  get start() {\n    return this.selector('TextPositionSelector').start;\n  }\n\n  /** Shorthand for the 'end' field of the TextPositionSelector **/\n  get end() {\n    return this.selector('TextPositionSelector').end;\n  }\n  \n}\n","import WebAnnotation from './WebAnnotation';\nimport { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\n/**\n * An \"annotation in draft mode\". Really the same\n * data structure, but as a separate class so we can\n * tell things apart properly.\n */\nexport default class Selection {\n\n  constructor(target, body) {\n    this.underlying = {\n      type: 'Selection',\n      body: body || [],\n      target\n    }\n  }\n\n  /** Creates a copy of this selection **/\n  clone = opt_props => {\n    // Deep-clone\n    const cloned = new Selection();\n    cloned.underlying = JSON.parse(JSON.stringify(this.underlying));  \n\n    if (opt_props)\n      cloned.underlying = { ...cloned.underlying, ...opt_props };\n\n    return cloned;\n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n\n  /** For consistency with WebAnnotation **/\n  isEqual(other) {\n    if (!other) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n  \n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector').exact;\n  }\n\n  /*******************************************/ \n  /* Selection-specific properties & methods */\n  /*******************************************/\n\n  get isSelection() {\n    return true;\n  }\n\n  toAnnotation = () => {\n    const a = Object.assign({}, this.underlying, {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`\n    });\n\n    return new WebAnnotation(a);\n  }\n\n}","import EventEmitter from 'tiny-emitter';\nimport { isTouchDevice } from '../util/Touch';\nimport { SVG_NAMESPACE } from '../util/SVG';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nconst isTouch = isTouchDevice();\n\n/**\n * A commmon base class for Tools and EditableShapes\n */\nexport class ToolLike extends EventEmitter {\n\n  constructor(g, config, env) {\n    super();\n    this.contourPoints = []\n    this.svg = g.closest('svg');\n\n    this.g = g;\n    this.config = config;\n    this.env = env;\n\n    // Default image scale\n    this.scale = 1;\n\n    // Bit of a hack. If we are dealing with a 'real' image, we enable\n    // reponsive mode. OpenSeadragon handles scaling in a different way,\n    // so we don't need responsive mode.\n    const { image } = env;\n    if (image instanceof Element || image instanceof HTMLDocument)\n      this.enableResponsive();\n  }\n\n  /**\n   * Implementations MAY extend this (calling super),\n   * to destroy SVG elements, mask, etc.\n   */\n  destroy() {\n    if (this.resizeObserver)\n      this.resizeObserver.disconnect();\n\n    this.resizeObserver = null;\n  }\n\n  enableResponsive = () => {\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => {\n        const svgBounds = this.svg.getBoundingClientRect();\n        const { width, height } = this.svg.viewBox.baseVal;\n\n        this.scale = Math.max(\n          width / svgBounds.width,\n          height / svgBounds.height\n        );\n\n        if (this.onScaleChanged)\n          this.onScaleChanged(this.scale);\n      });\n\n      this.resizeObserver.observe(this.svg.parentNode);\n    }\n  }\n\n  getSVGPoint = evt => {\n    const pt = this.svg.createSVGPoint();\n\n    if (isTouch) {\n      const bbox = this.svg.getBoundingClientRect();\n\n      const x = evt.clientX - bbox.x;\n      const y = evt.clientY - bbox.y;\n\n      const { left, top } = this.svg.getBoundingClientRect();\n      pt.x = x + left;\n      pt.y = y + top;\n\n      return pt.matrixTransform(this.g.getScreenCTM().inverse());\n    } else {\n      pt.x = evt.offsetX;\n      pt.y = evt.offsetY;\n\n      return pt.matrixTransform(this.g.getCTM().inverse());\n    }\n  }\n\n  /*********************************/\n  /*  Helpers for drawing handles  */\n  /*********************************/\n\n  drawHandle = (x, y) => {\n    const containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    containerGroup.setAttribute('class', 'a9s-handle');\n\n    const group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    const drawCircle = r => {\n      const c = document.createElementNS(SVG_NAMESPACE, 'circle');\n      c.setAttribute('cx', x);\n      c.setAttribute('cy', y);\n      c.setAttribute('r', r);\n      return c;\n    }\n\n    const radius = this.config.handleRadius || 6;\n\n    const inner = drawCircle(radius);\n    inner.setAttribute('class', 'a9s-handle-inner')\n\n    const outer = drawCircle(radius + 1);\n    outer.setAttribute('class', 'a9s-handle-outer')\n\n    group.appendChild(outer);\n    group.appendChild(inner);\n\n    containerGroup.appendChild(group);\n    return containerGroup;\n  }\n\n  setHandleXY = (handle, x, y) => {\n    const inner = handle.querySelector('.a9s-handle-inner');\n    inner.setAttribute('cx', x);\n    inner.setAttribute('cy', y);\n\n    const outer = handle.querySelector('.a9s-handle-outer');\n    outer.setAttribute('cx', x);\n    outer.setAttribute('cy', y);\n  }\n\n  getHandleXY = handle => {\n    const outer = handle.querySelector('.a9s-handle-outer');\n    return {\n      x: parseFloat(outer.getAttribute('cx')),\n      y: parseFloat(outer.getAttribute('cy'))\n    }\n  }\n\n  scaleHandle = handle => {\n    const inner = handle.querySelector('.a9s-handle-inner');\n    const outer = handle.querySelector('.a9s-handle-outer');\n\n    const radius = this.scale * (this.config.handleRadius || 6);\n    inner.setAttribute('r', radius);\n    outer.setAttribute('r', radius);\n  }\n\n}\n\n/**\n * Base class that adds some convenience stuff for tool plugins.\n */\nexport default class Tool extends ToolLike {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n    this.contourPoints = []\n    // We'll keep a flag set to false until\n    // the user has started moving, so we can\n    // fire the startSelection event\n    this.started = false;\n  }\n  setContourPoints(contourPoints){\n    this.contourPoints = contourPoints\n  }\n  attachListeners = ({ mouseMove, mouseUp, dblClick }) => {\n    // Handle SVG conversion on behalf of tool implementations\n    console.log(\"add handlers\");\n\n    if (mouseMove) {\n\n      this.mouseMove = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n\n        if (!this.started) {\n          this.emit('startSelection', { x, y });\n          this.started = true;\n        }\n        mouseMove(x, y, evt);\n      }\n\n      // Mouse move goes on SVG element\n      console.log(\"add mousemovehandlers\", this.svg);\n      this.svg.addEventListener('mousemove', this.mouseMove);\n    }\n\n    if (mouseUp) {\n      this.mouseUp = evt => {\n        if (evt.button !== 0) return;  // left click\n        const { x , y } = this.getSVGPoint(evt);\n        mouseUp(x, y, evt);\n      }\n\n      // Mouse up goes on doc, so we capture events outside, too\n      document.addEventListener('mouseup', this.mouseUp);\n    }\n\n    if (dblClick) {\n      this.dblClick = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n        dblClick(x, y, evt);\n      }\n\n      document.addEventListener('dblclick', this.dblClick);\n    }\n\n  }\n\n  detachListeners = () => {\n    if (this.mouseMove)\n      this.svg.removeEventListener('mousemove', this.mouseMove);\n\n    if (this.mouseUp)\n      document.removeEventListener('mouseup', this.mouseUp);\n\n    if (this.dblClick)\n      document.removeEventListener('dblclick', this.dblClick);\n  }\n\n  /**\n   * If startOnSingleClick is true, the tool starts on single click\n   * as well as drag. If false, starting strictly requires drag!\n   */\n  start = (evt, startOnSingleClick, contourpoints) => {\n    // Handle SVG conversion on behalf of tool implementations\n    const { x , y } = this.getSVGPoint(evt);\n    this.startDrawing(x, y, startOnSingleClick, evt, contourpoints);\n  }\n\n  /**\n   * Tool implementations MUST override these\n   */\n\n  get isDrawing() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  startDrawing = evt => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  createEditableShape = (annotation, formatters) => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n}\n\n// In addition, Tool implementations need to implement the following static methods\n\n// Tool.identifier = '...'\n\nTool.supports = annotation => {\n  throw new Error(IMPLEMENTATION_MISSING);\n}\n\n// Just some convenience shortcuts to client-core, for quicker\n// importing in plugins. (In a way, the intention is to make the\n// Tool class serve as a kind of mini-SDK).\nexport { default as Selection } from '@recogito/recogito-client-core/src/Selection';\nexport { default as WebAnnotation } from '@recogito/recogito-client-core/src/WebAnnotation';\n","import { ToolLike } from './Tool';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nexport default class EditableShape extends ToolLike {\n\n  constructor(annotation, g, config, env) {\n    super(g, config, env);\n\n    this.annotation = annotation;\n  }\n  \n  /**\n   * Implementations MUST override this method!\n   * \n   * Must return the 'g' element with the a9s-annotation class.\n   */\n  get element() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  /**\n   * Implementations MUST override this method!\n   * \n   * The annotation argument MUST be used to update\n   * the current state of the shape. It MUST NOT\n   * be stored as 'this.annotation'! 'this.annotation'\n   * MUST remain the original annotation at the time\n   * this EditableShape was created, because we will\n   * need it again in case the user cancels editing.\n   * \n   * Thinking of it in React terms, 'this.annotation'\n   * has the same purpose as props.annotation, whereas\n   * this method affects state.\n   */\n  updateState = annotation => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n}\n","import { SVG_NAMESPACE, addClass } from '../util/SVG';\n\n/** \n * Parses a W3C Web Annotation FragmentSelector conforming\n * to the Media Fragments spec. Supports (well-formed) xywh=pixel\n * and xywh=percent fragments. \n */\nexport const parseRectFragment = (annotation, image) => {\n  const selector = annotation.selector('FragmentSelector');\n\n  if (selector?.conformsTo.startsWith('http://www.w3.org/TR/media-frags')) {\n    const { value } = selector;\n  \n    const format = value.includes(':') ? value.substring(value.indexOf('=') + 1, value.indexOf(':')) : 'pixel';\n    const coords = value.includes(':') ? value.substring(value.indexOf(':') + 1) : value.substring(value.indexOf('=') + 1);\n\n    let [ x, y, w, h ] = coords.split(',').map(parseFloat);\n\n    if (format.toLowerCase() === 'percent') {\n      x = x * image.naturalWidth  / 100;\n      y = y * image.naturalHeight / 100;\n      w = w * image.naturalWidth  / 100;\n      h = h * image.naturalHeight / 100;\n    }\n\n    return { x, y, w, h };\n  }\n}\n\n/** \n * Serializes a (x, y, w, h)-tuple as Media Fragment selector\n * using pixel coordinates.\n */\nconst toPixelRectFragment = (x, y, w, h, image) => ({\n  source: image?.src,\n  selector: {\n    type: \"FragmentSelector\",\n    conformsTo: \"http://www.w3.org/TR/media-frags/\",\n    value: `xywh=pixel:${x},${y},${w},${h}`\n  }\n});\n\n/** \n * Serializes a (x, y, w, h)-tuple as Media Fragment selector \n * using percent coordinates.\n */\nconst toPercentRectFragment = (x, y, w, h, image) => {\n  const px = x / image.naturalWidth  * 100;\n  const py = y / image.naturalHeight * 100;\n  const pw = w / image.naturalWidth  * 100;\n  const ph = h / image.naturalHeight * 100;\n\n  return {\n    source: image.src,\n    selector: {\n      type: \"FragmentSelector\",\n      conformsTo: \"http://www.w3.org/TR/media-frags/\",\n      value: `xywh=percent:${px},${py},${pw},${ph}`\n    }\n  }\n}\n\nexport const toRectFragment = (x, y, w, h, image, fragmentUnit) =>\n  fragmentUnit?.toLowerCase() === 'percent' ?\n    toPercentRectFragment(x, y, w, h, image) :\n    toPixelRectFragment(x, y, w, h, image);\n\n/** Shorthand to apply the given (x, y, w, h) to the SVG shape **/\nconst setXYWH = (shape, x, y, w, h) => {\n  shape.setAttribute('x', x);\n  shape.setAttribute('y', y);\n  shape.setAttribute('width', w);\n  shape.setAttribute('height', h);\n}\n\n\nconst setPointXY = (shape, x, y) => {\n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('r', 7); // TODO make configurable\n}\n\nexport const drawRectMask = (imageDimensions, x, y, w, h) => {\n  const mask = document.createElementNS(SVG_NAMESPACE, 'path');\n  mask.setAttribute('fill-rule', 'evenodd');\n\n  const { naturalWidth, naturalHeight } = imageDimensions;\n  mask.setAttribute('d', `M0 0 h${naturalWidth} v${naturalHeight} h-${naturalWidth} z M${x} ${y} h${w} v${h} h-${w} z`);\n\n  return mask;\n}\n\nexport const setRectMaskSize = (mask, imageDimensions, x, y, w, h) => {\n  const { naturalWidth, naturalHeight } = imageDimensions;\n  mask.setAttribute('d', `M0 0 h${naturalWidth} v${naturalHeight} h-${naturalWidth} z M${x} ${y} h${w} v${h} h-${w} z`);\n}\n\n/** \n * Draws an SVG rectangle, either from an annotation, or an\n * (x, y, w, h)-tuple.\n */\nexport const drawRect = (arg1, arg2, arg3, arg4) => {\n  const { x, y, w, h } = arg1.type === 'Annotation' || arg1.type === 'Selection' ?\n    parseRectFragment(arg1, arg2) : { x: arg1, y: arg2, w: arg3, h: arg4 };\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  if (w === 0 && h === 0) {\n    // Edge case: rect is actually a point\n    addClass(g, 'a9s-point');\n    addClass(g, 'a9s-non-scaling');\n    g.setAttribute('transform-origin', `${x} ${y}`);\n\n    const outerPoint  = document.createElementNS(SVG_NAMESPACE, 'circle');\n    const innerPoint  = document.createElementNS(SVG_NAMESPACE, 'circle');\n\n    innerPoint.setAttribute('class', 'a9s-inner');\n    setPointXY(innerPoint, x, y);\n\n    outerPoint.setAttribute('class', 'a9s-outer');\n    setPointXY(outerPoint, x, y);\n\n    g.appendChild(outerPoint);\n    g.appendChild(innerPoint);  \n  } else {\n    const outerRect = document.createElementNS(SVG_NAMESPACE, 'rect');\n    const innerRect = document.createElementNS(SVG_NAMESPACE, 'rect');\n\n    innerRect.setAttribute('class', 'a9s-inner');\n    setXYWH(innerRect, x, y, w, h);\n\n    outerRect.setAttribute('class', 'a9s-outer');\n    setXYWH(outerRect, x, y, w, h);\n\n    g.appendChild(outerRect);\n    g.appendChild(innerRect);\n  }\n\n  return g;\n}\n\n/** Gets the (x, y, w, h)-values from the attributes of the SVG group **/\nexport const getRectSize = g => {\n  const outer = g.querySelector('.a9s-outer');\n\n  if (outer.nodeName === 'rect') {\n    const x = parseFloat(outer.getAttribute('x'));\n    const y = parseFloat(outer.getAttribute('y'));\n    const w = parseFloat(outer.getAttribute('width'));\n    const h = parseFloat(outer.getAttribute('height'));\n\n    return { x, y, w, h };\n  } else {\n    const x = parseFloat(outer.getAttribute('cx'));\n    const y = parseFloat(outer.getAttribute('cy'));\n\n    return { x, y, w: 0, h: 0 };\n  }\n}\n\n/** Applies the (x, y, w, h)-values to the rects in the SVG group **/\nexport const setRectSize = (g, x, y, w, h) => {\n  const inner = g.querySelector('.a9s-inner');\n  const outer = g.querySelector('.a9s-outer');\n\n  if (outer.nodeName === 'rect') {\n    setXYWH(inner, x, y, w, h);\n    setXYWH(outer, x, y, w, h);  \n  } else {\n    setPointXY(inner, x, y);\n    setPointXY(outer, x, y);\n  }\n}\n\n/** \n * Shorthand to get the area (rectangle w x h) from the \n * annotation's fragment selector. \n */\nexport const rectArea = (annotation, image) => {\n  const { w, h } = parseRectFragment(annotation, image);\n  return w * h;\n}\n\n","import { toRectFragment } from '@recogito/annotorious/src/selectors/RectFragment';\n\nexport const isPoint = annotation =>\n  annotation.target.renderedVia?.name === 'point';\n\nexport const toFragment = (x, y, image, fragmentUnit) => ({\n  ...toRectFragment(x, y, 0, 0, image, fragmentUnit),\n  renderedVia: {\n    name: 'point'\n  }\n});","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { parseRectFragment } from '@recogito/annotorious/src/selectors/RectFragment';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { toFragment } from './Point';\n\nexport default class EditablePoint extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    const { x, y } = parseRectFragment(annotation, env.image);\n\n    this.container = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n\n    this.point = this.drawHandle(x, y);\n    this.point.addEventListener('mousedown', this.onGrab);\n    \n    this.elementGroup.appendChild(this.point);\n\n    this.container.appendChild(this.elementGroup);\n    g.appendChild(this.container);\n\n    // true if te mouse has grabbed the point\n    this.isGrabbed = false;\n  }\n\n  onScaleChanged = () => \n    this.scaleHandle(this.point);\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  onGrab = () => {\n    this.isGrabbed = true;\n  }\n\n  onMouseMove = evt => {\n    if (evt.button !== 0) return;  // left click\n\n    if (this.isGrabbed) {\n      const {x, y} = this.getSVGPoint(evt);\n\n      this.setHandleXY(this.point, x, y);\n\n      const target = toFragment(x, y, this.env.image, this.config.fragmentUnit);\n      this.emit('update', target);\n    }\n  }\n\n  onMouseUp = () => {\n    this.isGrabbed = false;\n  }\n\n  updateState = annotation => {\n    const { x, y } = parseRectFragment(annotation, this.env.image);\n    this.setHandleXY(this.point, x, y);\n  }\n\n  destroy() {\n    this.svg.removeEventListener('mousemove', this.onMouseMove);\n    this.svg.removeEventListener('mouseup', this.onMouseUp);\n\n    this.container.parentNode.removeChild(this.container);\n    super.destroy();\n  }\n\n}","import Tool, { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport EditablePoint from './EditablePoint';\nimport { toFragment, isPoint } from './Point';\n\nexport default class PointTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n  }\n\n  startDrawing = (x, y, _, evt) => {\n    // The top-most existing annotation at this position (if any) \n    const annotation = evt.target.closest('.a9s-annotation')?.annotation;\n\n    // The point drawing tool will ALWAYS create a point annotation,\n    // regardless of whether there's already an annotation underneath.\n    // UNLESS the annotation underneath is itself a point!\n    if (!annotation || !isPoint(annotation)) {\n      const element = this.drawHandle(x, y);\n      this.scaleHandle(element);\n\n      this.g.appendChild(element);\n\n      element.annotation = new Selection(toFragment(x, y, this.env.image, this.config.fragmentUnit));\n\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel')\n    }\n  }\n\n  stop = () => {\n    // Nothing to do\n  }\n\n  get isDrawing() {\n    // Point selection is an instant action - the\n    // tool is never an 'drawing' state\n    return false;\n  }\n  \n  createEditableShape = annotation =>\n    new EditablePoint(annotation, this.g, this.config, this.env);\n\n}\n\nPointTool.identifier = 'point';\n\nPointTool.supports = annotation => {\n  // Not needed, since the target.renderedVia property will be evaluated first\n  return false;\n}","import { SVG_NAMESPACE } from '../util/SVG';\n\n/** Helper that forces an un-namespaced node to SVG **/\nconst insertSVGNamespace = originalDoc => {\n  // Serialize and parse for the namespace to take effect on every node\n  const serializer = new XMLSerializer();\n  const str = serializer.serializeToString(originalDoc.documentElement);\n\n  // Doesn't seem that there's a clean cross-browser way for this...\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\n\n  const parser = new DOMParser();\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\n  return namespacedDoc.documentElement;\n}\n\nconst sanitize = doc => {\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \n  // for the basic approach\n  const cleanEl = el => {\n    Array.from(el.attributes).forEach(attr => {\n      if (attr.name.startsWith('on'))\n        el.removeAttribute(attr.name)\n    });\n  }\n\n  // Remove script tags\n  const scripts = doc.getElementsByTagName('script');\n  Array.from(scripts).reverse().forEach(el =>\n    el.parentNode.removeChild(el));\n\n  // Remove on... attributes\n  cleanEl(doc);\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\n\n  return doc;\n}\n\nexport const svgFragmentToShape = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector) {\n    const parser = new DOMParser();\n\n    // Parse the XML document, assuming SVG\n    const { value } = selector;\n    const doc = parser.parseFromString(value, \"image/svg+xml\");\n\n    // SVG needs a namespace declaration - check if it's set or insert if not\n    const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\n    const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\n\n    if (isPrefixDeclared || isDefaultNamespaceSVG) {\n      return sanitize(doc).firstChild;\n    } else {\n      return sanitize(insertSVGNamespace(doc)).firstChild;\n    }\n  }\n}\n\nexport const drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n\n  return g;\n}\n\nexport const toSVGTarget = (shape, image) => {\n  const inner = shape.querySelector('.a9s-inner').cloneNode(true);\n  inner.removeAttribute('class');\n  inner.removeAttribute('xmlns');\n\n  let serialized = inner.outerHTML || new XMLSerializer().serializeToString(inner);\n  serialized = serialized.replace(` xmlns=\"${SVG_NAMESPACE}\"`, '');\n\n  return {\n    source: image?.src,\n    selector: {\n      type: \"SvgSelector\",\n      value: `<svg>${serialized}</svg>`\n    }\n  }\n}\n\nexport const svgArea = annotation => {\n  const shape = svgFragmentToShape(annotation);\n  const nodeName = shape.nodeName.toLowerCase();\n\n  if (nodeName === 'polygon') \n    return polygonArea(shape);\n  else if (nodeName === 'circle')\n    return circleArea(shape);\n  else if (nodeName === 'ellipse')\n    return ellipseArea(shape);\n  else if (nodeName == 'path')\n    return pathArea(shape);\n  else\n    throw `Unsupported SVG shape type: ${nodeName}`;\n}\n\nexport const getAreaOfPoints = points =>{\n  let area = 0;\n  let j = points.length - 1;\n\n  for (let i=0; i < points.length; i++) {\n    area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n    j = i;\n  }\n\n  return Math.abs(0.5 * area);\n}\n\nexport const pointInsidePoygon = (point, polygon) => {\n  \n  var n=polygon.length,\n  is_in=false,\n  x=point[0],\n  y=point[1],\n  x1,x2,y1,y2;\n\nfor(var i=0; i < n-1; ++i){\n  x1=polygon[i][0];\n  x2=polygon[i+1][0];\n  y1=polygon[i][1];\n  y2=polygon[i+1][1];\n\n  if(y < y1 != y < y2 && x < (x2-x1) * (y-y1) / (y2-y1) + x1){\n      is_in=!is_in;\n  }\n}\n\nreturn is_in;\n};\n\nexport const isHole = (polygon1, polygon2) => {\n  // Algorithm checks, if polygon1 is in polygon2\n  for (var point of polygon1){\n    if (!pointInsidePoygon(point, polygon2)) return false\n  }\n  return true;\n}\n\nconst polygonArea = polygon => {\n  const points = polygon.getAttribute('points')\n    .split(' ') // Split x/y tuples\n    .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n  return getAreaOfPoints(points)\n}\n\nconst circleArea = circle => {\n  const r = circle.getAttribute('r');\n  return r * r * Math.PI;\n}\n\nconst ellipseArea = ellipse => {\n  const rx = ellipse.getAttribute('rx');\n  const ry = ellipse.getAttribute('ry');\n  return rx * ry * Math.PI;\n}\n\nconst pathArea = path => {\n  if (path.getAttribute('d').toUpperCase().includes(\"Z\")){\n    var allcoords = path.getAttribute('d')\n    var polygons =allcoords.split('M');\n    var multiPolygon = []\n    polygons.forEach(function (polygon, index) {\n      if (polygon.length>0){\n        let coords = []\n        polygon=polygon.replace(/ Z/g,\"Z\")\n        polygon=polygon.replace(/Z /g,\"Z\")\n        polygon=polygon.replace(/Z/g,\"\")\n        polygon=polygon.replace(/L /g,\"L\")\n        polygon=polygon.replace(/ L/g,\"L\")\n        var coordsString = polygon.split(\"L\")\n        coordsString.forEach(function(coord, index){\n          coords.push([parseFloat(coord.split(\",\")[0]),parseFloat(coord.split(\",\")[1])]);\n        });\n        if (coords[0] !== coords[coords.length - 1]){\n          coords.push(coords[0])\n        }\n        multiPolygon.push(coords)\n      }\n    })\nif (multiPolygon.length > 1){\n      var area = 0\n      for (let poly1 of multiPolygon) {\n        for (let poly2 of multiPolygon) {\n          if (poly1 !== poly2) {\n            if (isHole(poly1, poly2)) {\n              area -= getAreaOfPoints(poly1)\n            } else {\n              area += getAreaOfPoints(poly1)\n            }\n          }\n        }\n      }\n      return area\n    } else if (multiPolygon.length === 1){\n      return getAreaOfPoints(multiPolygon[0])\n    } else {\n      return 0\n    }\n  } else {\n    const pointList = path.getAttribute('d').split('L');\n    let area = 0;\n  \n    if(pointList.length > 1) {\n      var point = pointList[pointList.length - 1].trim().split(' ');\n      let lastX = parseFloat(point[0]);\n      let lastY = parseFloat(point[1]);\n  \n      point = pointList[0].substring(1).trim().split(' ');\n      let x = parseFloat(point[0]);\n      let y = parseFloat(point[1]);\n      area += (lastX + x) * (lastY - y);\n      lastX = x;\n      lastY = y;\n  \n      for (let i = 1; i < pointList.length; i++) {\n        point = pointList[i].trim().split(' ');\n        x = parseFloat(point[0]);\n        y = parseFloat(point[1]);\n        area += (lastX + x) * (lastY - y);\n        lastX = x;\n        lastY = y;\n      }\n    }\n  \n    return Math.abs(0.5 * area);\n  }\n\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, r) to the SVG shape **/\nconst setXYR = (shape, x, y, r) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('r', r);\n}\n\n/** \n * Draws an SVG circle, either from an annotation, or an\n * (cx, cy, r)-tuple.\n */\nexport const drawCircle = (cx, cy, r) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const outerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n  const innerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n\n  innerCircle.setAttribute('class', 'a9s-inner');\n  setXYR(innerCircle, cx, cy, r);\n\n  outerCircle.setAttribute('class', 'a9s-outer');\n  setXYR(outerCircle, cx, cy, r);\n\n  g.appendChild(outerCircle);\n  g.appendChild(innerCircle);\n\n  return g;\n}\n\nexport const setCircleSize = (g, cx, cy, r) => {\n  const innerCircle = g.querySelector('.a9s-inner');\n  const outerCircle = g.querySelector('.a9s-outer');\n  \n  setXYR(innerCircle, cx, cy, r);\n  setXYR(outerCircle, cx, cy, r);\n}\n\nexport const getCircleSize = g => {\n  const outerCircle = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerCircle.getAttribute('cx'));\n  const cy = parseFloat(outerCircle.getAttribute('cy'));\n  const r = parseFloat(outerCircle.getAttribute('r'));\n  \n  return { cx, cy, r };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getCircleSize } from './Circle';\n\nexport default class CircleMask {\n\n  constructor(imageDimensions, circle) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.circle = circle;\n\n    const { cx, cy, r } = getCircleSize(this.circle);\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawCircle, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * A 'rubberband' selection tool for creating a circle by\n * clicking and dragging.\n */\nexport default class RubberbandCircle {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawCircle(anchorX, anchorY, 2);\n    this.circle.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.circle);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.circle);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.circle;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    const { naturalWidth, naturalHeight } = this.env.image;\n\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n    const r = Math.max(1, Math.pow(w ** 2 + h ** 2, 0.5) / 2);\n\n    const cx = this.anchor[0] + w / 2;\n    const cy = this.anchor[1] + h / 2;\n\n    if ((cx-r < 0 || cx + r > naturalWidth) || (cy-r < 0 || cy + r > naturalHeight)) return;\n    \n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.circle.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.circle = null;\n    this.group = null;\n  }\n\n}","import { addClass, SVG_NAMESPACE } from './SVG';\n\nconst isFirefox = /firefox/i.test(navigator.userAgent);\n\nconst formatSvgEl = (svgEl, x, y, w, h) => {\n  svgEl.setAttribute('width', w);\n  svgEl.setAttribute('height', h);\n\n  // Argh - Firefox produces broken SVG bounds for nested SVG\n  if (isFirefox) {\n    svgEl.setAttribute('x', 0);\n    svgEl.setAttribute('y', 0);\n    svgEl.setAttribute('transform', `translate(${x}, ${y})`);  \n  } else {\n    svgEl.setAttribute('x', x);\n    svgEl.setAttribute('y', y);\n  }\n}\n\nconst appendFormatterEl = (formatterEl, shape) => {\n  const { x, y, width, height } = shape.getBBox();\n\n  const svgEl = document.createElementNS(SVG_NAMESPACE, 'svg');\n  svgEl.setAttribute('class', 'a9s-formatter-el');\n\n  formatSvgEl(svgEl, x, y, width, height);\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  g.appendChild(formatterEl);y\n\n  svgEl.appendChild(g);\n  \n  shape.append(svgEl);\n}\n\n/**\n * A formatter is a user-defined function that takes an annotation as input,\n * and returns either a string, or an object. If a string is returned, this\n * will be appended to the annotation element CSS class list. Otherwise, the\n * object can have the following properties: \n * \n * - 'className' added to the CSS class list\n * - 'data-*' added as data attributes\n * - 'style' a list of CSS styles (in the form of a string) \n */\n export const setCustomStyle = (shape, annotation) => {\n  if (annotation.getStyle){\n    const style = annotation.getStyle();\n    if (style){\n      for (var i = 0; i < shape.children.length; i++){\n        if (shape.children[i].classList.contains(\"a9s-inner\")){\n          for (let [key, value] of Object.entries(style.inner)){\n            shape.children[i].style[key] = value\n          }\n        } else if (shape.children[i].classList.contains(\"a9s-outer\")){\n          for (let [key, value] of Object.entries(style.outer)){\n            shape.children[i].style[key] = value\n          }\n        }\n      }\n    }  \n  }\n  return shape\n}\nexport const format = (shape, annotation, formatters) => {\n  // The formatter can be undefined\n  if (!formatters)\n    return shape;\n\n  // Merge outputs from all formatter functions into one object\n  const format = formatters.reduce((merged, fn) => {\n    const format = fn(annotation);\n    \n    if (!format)\n      return merged;\n\n    if (typeof format === 'string' || format instanceof String) {\n      merged.className = merged.className ? `${merged.className} ${format}` : format; \n    } else if (format.nodeType === Node.ELEMENT_NODE) {\n      merged.elements = merged.elements ? [...merged.elements, format] : [format];\n    } else {\n      const { className, style, element } = format;\n\n      if (className)\n        merged.className = merged.className ? `${merged.className} ${className}` : className;\n\n      if (style)\n        merged.style = merged.style ? `${merged.style} ${style}` : style;\n\n      if (element)\n        merged.elements = merged.elements ? [...merged.elements, element] : [element];\n    }\n\n    // Copy data attributes\n    for (const key in format) {\n      if (format.hasOwnProperty(key) && key.startsWith('data-')) {\n        merged[key] = format[key];\n      }\n    }\n\n    return merged;\n  }, {});\n\n  const { className, style, elements } = format;\n\n  if (className)\n    addClass(shape, className);\n\n  if (style) {\n    const outer = shape.querySelector('.a9s-outer');\n    const inner = shape.querySelector('.a9s-inner');\n\n    if (outer && inner) {\n      outer.setAttribute('style', 'display:none');\n      inner.setAttribute('style', style);\n    } else {\n      shape.setAttribute('style', style);\n    }\n  }\n\n  if (elements)\n    elements.forEach(el => appendFormatterEl(el, shape));\n\n  for (const key in format) {\n    if (format.hasOwnProperty(key) && key.startsWith('data-')) {\n      shape.setAttribute(key, format[key]);\n    }\n  }\n}\n\nexport const setFormatterElSize = (group, x, y, w, h) => {\n  const formatterEl = group.querySelector('.a9s-formatter-el');\n  if (formatterEl)\n    formatSvgEl(formatterEl, x, y, w, h);\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getCircleSize, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * An editable circle shape.\n */\nexport default class EditableCircle extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <circle class=\"a9s-outer\" ... />\n    //     <circle class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable circle compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawEmbeddedSVG(annotation);\n    this.circle.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.circle));\n\n    this.mask = new Mask(env.image, this.circle);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = circle + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.circle);    \n\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    this.handles = [\n      [ cx, cy - r ],\n      [ cx + r, cy ],\n      [ cx, cy + r ],\n      [ cx - r, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.circle, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, r) => {\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - r);\n    this.setHandleXY(topright, cx + r, cy);\n    this.setHandleXY(bottomright, cx, cy + r);\n    this.setHandleXY(bottomleft, cx - r, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var width = 0;\n    var height = 0;\n    var r;\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n      height = mouseY - anchor.y;\n      r = Math.abs(height) / 2;\n    } else {\n      mouseY = anchor.y;\n      width = mouseX - anchor.x;\n      r = Math.abs(width) / 2;\n    }\n\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - r);\n      this.setHandleXY(this.handles[idx2], cx, cy + r);\n      this.setHandleXY(this.handles[1], cx + r, cy);\n      this.setHandleXY(this.handles[3], cx - r, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + r, cy);\n      this.setHandleXY(this.handles[idx1], cx - r, cy);\n      this.setHandleXY(this.handles[0], cx, cy - r);\n      this.setHandleXY(this.handles[2], cx, cy + r);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n    \n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getCircleSize(this.circle);\n    \n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.circle) {\n        const { r } = getCircleSize(this.circle);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = Math.max(constrain(pos.x - this.grabbedAt.x, naturalWidth - r), r);\n        const cy = Math.max(constrain(pos.y - this.grabbedAt.y, naturalHeight - r), r);\n\n        this.setSize(cx, cy, r); \n        this.emit('update', toSVGTarget(this.circle, this.env.image)); \n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n        this.emit('update', toSVGTarget(this.circle, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const r =  parseFloat(shape.getAttribute('r'));\n\n    this.setSize(cx, cy, r);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandCircle from './RubberbandCircle';\nimport EditableCircle from './EditableCircle';\n\n/**\n * A rubberband selector for circle selections.\n */\nexport default class RubberbandCircleTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandCircle(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableCircle(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandCircleTool.identifier = 'circle';\n\nRubberbandCircleTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<circle/g);\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, rx, ry) to the SVG shape **/\nconst setXYR = (shape, x, y, rx, ry) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('rx', rx);\n  shape.setAttribute('ry', ry);\n}\n\n/** \n * Draws an SVG ellipse, either from an annotation, or an\n * (cx, cy, rx, ry)-tuple.\n */\nexport const drawEllipse = (cx, cy, rx, ry) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const innerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n  const outerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n\n  innerEllipse.setAttribute('class', 'a9s-inner');\n  setXYR(innerEllipse, cx, cy, rx, ry);\n\n  outerEllipse.setAttribute('class', 'a9s-outer');\n  setXYR(outerEllipse, cx, cy, rx, ry);\n\n  g.appendChild(outerEllipse);\n  g.appendChild(innerEllipse);\n\n  return g;\n}\n\nexport const setEllipseSize = (g, cx, cy, rx, ry) => {\n  const innerEllipse = g.querySelector('.a9s-inner');\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  setXYR(innerEllipse, cx, cy, rx, ry);\n  setXYR(outerEllipse, cx, cy, rx, ry);\n}\n\nexport const getEllipseSize = g => {\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerEllipse.getAttribute('cx'));\n  const cy = parseFloat(outerEllipse.getAttribute('cy'));\n  const rx = parseFloat(outerEllipse.getAttribute('rx'));\n  const ry = parseFloat(outerEllipse.getAttribute('ry'));\n  \n  return { cx, cy, rx, ry };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getEllipseSize } from './Ellipse';\n\nexport default class EllipseMask {\n\n  constructor(imageDimensions, ellipse) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.ellipse = ellipse;\n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawEllipse, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * A 'rubberband' selection tool for creating a ellipse by\n * clicking and dragging.\n */\nexport default class RubberbandEllipse {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEllipse(anchorX, anchorY, 2);\n    this.ellipse.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.ellipse);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.ellipse;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n\n    const cx = w > 0 ? this.anchor[0] + w / 2 : oppositeX + w / 2;\n    const cy = h > 0 ? this.anchor[1] + h / 2 : oppositeY + h / 2;\n\n    const rx = Math.abs(w / 2);\n    const ry = Math.abs(h / 2);\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.ellipse.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.ellipse = null;\n    this.group = null;\n  }\n\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getEllipseSize, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * An editable ellipse shape.\n */\nexport default class EditableEllipse extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <ellipse class=\"a9s-outer\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable ellipse compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEmbeddedSVG(annotation);\n    this.ellipse.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.ellipse));\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = ellipse + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.ellipse);    \n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    this.handles = [\n      [ cx, cy - ry ],\n      [ cx + rx, cy ],\n      [ cx, cy + ry ],\n      [ cx - rx, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.ellipse, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, rx, ry) => {\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - ry);\n    this.setHandleXY(topright, cx + rx, cy);\n    this.setHandleXY(bottomright, cx, cy + ry);\n    this.setHandleXY(bottomleft, cx - rx, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, leftHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n    const anchorLeft = this.getHandleXY(leftHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var rx = 0;\n    var ry = 0;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n    } else {\n      mouseY = anchor.y;\n    }\n\n    const width = mouseX - anchor.x;\n    const height = mouseY - anchor.y;\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n    var rx = w/2;\n    var ry = h/2;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      rx = Math.abs(anchor.x - anchorLeft.x);\n    } else {\n      ry = Math.abs(anchor.y - anchorLeft.y);\n    }\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - ry);\n      this.setHandleXY(this.handles[idx2], cx, cy + ry);\n      this.setHandleXY(this.handles[1], cx + rx, cy);\n      this.setHandleXY(this.handles[3], cx - rx, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + rx, cy);\n      this.setHandleXY(this.handles[idx1], cx - rx, cy);\n      this.setHandleXY(this.handles[0], cx, cy - ry);\n      this.setHandleXY(this.handles[2], cx, cy + ry);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n\n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getEllipseSize(this.ellipse);\n\n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.ellipse) {\n        const { rx, ry } = getEllipseSize(this.ellipse);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = constrain(pos.x - this.grabbedAt.x, naturalWidth - rx);\n        const cy = constrain(pos.y - this.grabbedAt.y, naturalHeight - ry);\n\n        this.setSize(cx, cy, rx, ry); \n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n        const leftHandle = this.handles[(handleIdx + 3) % 4];\n\n        this.stretchCorners(handleIdx, oppositeHandle, leftHandle, pos);\n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const rx = parseFloat(shape.getAttribute('rx'));\n    const ry = parseFloat(shape.getAttribute('ry'));\n    \n    this.setSize(cx, cy, rx, ry);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandEllipse from './RubberbandEllipse';\nimport EditableEllipse from './EditableEllipse';\n\n/**\n * A rubberband selector for ellipse selections.\n */\nexport default class RubberbandEllipseTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandEllipse(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableEllipse(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandEllipseTool.identifier = 'ellipse';\n\nRubberbandEllipseTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<ellipse/g);\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\n/**\n * A 'rubberband' selection tool for creating freehand drawing by\n * clicking and dragging.\n */\nexport default class RubberbandFreehand {\n\n  constructor(anchor, g, env) {\n    this.points = [ anchor ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.freehand = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.freehand.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.inner);\n\n    this.freehand.appendChild(this.outer);\n    this.freehand.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n   // TODO optional: mask to dim the outside area\n   // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.freehand);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var str = points.map(pt => `L${pt[0]} ${pt[1]}`).join(' ');\n    str = 'M' + str.substring(1);\n    this.outer.setAttribute('d', str);\n    this.inner.setAttribute('d', str);\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n\n    //TODO optional: edge smoothing\n\n    this.addPoint(xy);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  addPoint = xy => {\n    this.points = [ ...this.points, xy ];\n    this.setPoints(this.points);   \n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  get element() {\n    return this.freehand;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.freehand = null;    \n    this.group = null;\n  }\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n}\n","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\nconst getPoints = shape => {\n  const pointList = shape.getAttribute('d').split('L');\n  const points = [];\n  if(pointList.length > 0) {\n    var point = pointList[0].substring(1).trim().split(' ');\n    points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n\n    for (let i = 1; i < pointList.length; i++) {\n      var point = pointList[i].trim().split(' ');\n      points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n    }\n  }\n\n  return points;\n}\n\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\n\n/**\n * An editable freehand drawing.\n */\nexport default class EditableFreehand extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    // Not using .toFixed(1) because that will ALWAYS\n    // return one decimal, e.g. \"15.0\" (when we want \"15\")\n    const round = num => Math.round(10 * num) / 10;\n\n    var str = points.map(pt => `L${round(pt.x)} ${round(pt.y)}`).join(' ');\n    str = 'M' + str.substring(1);\n\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    const { x, y, width, height } = outer.getBBox();\n\n    // TODO optional: mask to dim the outside area\n    // this.mask.redraw();\n\n    // TODO optional: handles to stretch the shape\n/*    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n\n    this.setHandleXY(topleft, x, y);\n    this.setHandleXY(topright, x + width, y);\n    this.setHandleXY(bottomright, x + width, y + height);\n    this.setHandleXY(bottomleft, x, y + height);*/\n\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, delta, max) =>\n      coord + delta < 0 ? -coord : (coord + delta > max ? max - coord : delta);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      const { x, y, width, height } = getBBox(this.shape);\n\n      if (this.grabbedElem === this.shape) {\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const dx = constrain(x, pos.x - this.grabbedAt.x, naturalWidth - width);\n        const dy = constrain(y, pos.y - this.grabbedAt.y, naturalHeight - height);\n\n        const inner = this.shape.querySelector('.a9s-inner');\n        const updatedPoints = getPoints(inner).map(pt => ({ x: pt.x + dx, y: pt.y + dy }));\n\n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }\n      // TODO optional: handles to stretch the shape\n      /* else {\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }*/\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    const points = getPoints(svgFragmentToShape(annotation));\n    this.setPoints(points);\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandFreehand from './RubberbandFreehand';\nimport EditableFreehand from './EditableFreehand';\n\n/**\n * A rubberband selector for freehand fragments.\n */\nexport default class RubberbandFreehandTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandFreehand([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y) => {\n    this.onDblClick(x, y);\n  }\n\n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    this.detachListeners();\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth || height >= minHeight) {\n\n      const shape = this.rubberband.element;\n      shape.annotation = this.rubberband.toSelection();\n\n      this.emit('complete', shape);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation =>\n    new EditableFreehand(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandFreehandTool.identifier = 'freehand';\n\nRubberbandFreehandTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return (selector.value?.match(/^<svg.*<path*/g) && !selector.value.toUpperCase().includes(\"Z\"));\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n//import Mask from './MultipolygonMask';\n// TODO optional: mask to dim the outside area\n//import Mask from './multipolygonMask';\n\n/**\n * A 'rubberband' selection tool for creating multipolygon drawing by\n * clicking and dragging.\n */\nexport default class RubberbandMultipolygon {\n\n  constructor(anchor, g, env) {\n    this.points = [];\n    this.points.push([ anchor, anchor ])\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.multipolygon = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.multipolygon.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n    //this.mask = new Mask(env.image, this.inner);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.inner);\n\n    this.multipolygon.appendChild(this.outer);\n    this.multipolygon.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    // TODO optional: mask to dim the outside area\n    // this.group.appendChild(this.mask.element);\n    //this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.multipolygon);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var attr =\"\";\n    for (var ps of points){\n      var attr2=\"\"\n      if (ps.length>0){\n        for (var p of ps) {\n          if (p){\n            if (attr2===\"\"){\n              attr2  +=`M${p[0]},${p[1]}`;\n            }\n            else{\n              attr2  +=` L${p[0]},${p[1]}`;\n            }\n          }\n        };\n         attr+=attr2\n      }\n    }\n    attr+=\" Z\"\n    this.outer.setAttribute('d', attr);\n    this.inner.setAttribute('d', attr);\n  }\n\n  getBoundingClientRect = () =>{\n    console.log(\"getBoundingClientRect\", this.outer);\n    this.outer.getBoundingClientRect();\n  }\n    dragTo = xy => {\n      // Make visible\n      this.group.style.display = null;\n      const head = this.points[this.points.length - 1].slice(0, this.points[this.points.length - 1].length - 1);\n      var headRest=this.points.slice(0,-1)\n      const rubberband = [ ...head, xy, head[0] ];\n      headRest.push(rubberband)\n      this.setPoints(headRest);\n      //this.mask.redraw();\n    }\n  \n  addPoint = xy => {\n    // Don't add a new point if distance < 2 pixels\n    // console.log(\"Entering addpoint\", this.points[this.points.length - 1].length);\n    if (this.points[this.points.length - 1].length>0){\n      const head = this.points[this.points.length - 1].slice(0, this.points[this.points.length - 1].length - 1);\n      const lastCorner = head[head.length - 1];\n      const dist = Math.pow(xy[0] - lastCorner[0], 2) + Math.pow(xy[1] - lastCorner[1], 2);\n      if (dist > 4) {\n        this.points[this.points.length - 1] = [ ...head, xy, head[0] ];\n        this.setPoints(this.points);   \n        //this.mask.redraw();\n      } \n    } else{\n      this.points[this.points.length - 1] = [xy,xy];\n      // console.log(this.points[this.points.length - 1]);\n      this.setPoints(this.points);\n    }\n  }\n  undo = () => {\n    console.log(\"last\",this.points[this.points.length - 1].length);\n    if (this.points[this.points.length - 1].length>2){\n      this.points[this.points.length - 1].pop();\n    } else {\n      if (this.points.length>1){\n        this.points.pop()\n      }\n    }\n  }\n  newPart = () => {\n    // console.log(\"NewPart triggered\");\n    this.points.push([]);\n    // console.log(\"points after newPart: \", this.points);\n  }\n \n  get element() {\n    return this.multipolygon;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.multipolygon = null;    \n    this.group = null;\n  }\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n}\n","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\n\n// TODO optional: mask to dim the outside area\n//import Mask from './MultipolygonMask';\n\nconst getPoints = (shape) => {\n  // Could just be Array.from(shape.querySelector('.inner').points) but...\n  // IE11 :-(\n  const pointLists = getPointsFromPathValue(shape.querySelector('.a9s-inner').attributes.d.nodeValue)\n  const pointArray = [];\n  for (let pointList of pointLists) {\n    let points = []\n    for (let point of pointList) {\n      let p = {\n        x:parseFloat(point[0]),\n        y:parseFloat(point[1])\n      }\n      points.push(p);\n    }\n    pointArray.push(points);\n  }\n\n  return pointArray;\n}\nconst getPointsFromPathValue = polygon => {\n  var results =polygon.split('M');\n  var allcoords = []\n  results.forEach(function (result, index) {\n    if (result.length>0){\n      let coords = []\n      result=result.replace(/ Z/g,\"Z\")\n      result=result.replace(/Z /g,\"Z\")\n      result=result.replace(/Z/g,\"\")\n      result=result.replace(/L /g,\"L\")\n      result=result.replace(/ L/g,\"L\")\n      var coordsString = result.split(\"L\")\n      coordsString.forEach(function(coord, index){\n        coords.push([parseFloat(coord.split(\",\")[0]).toFixed(2).toString(),parseFloat(coord.split(\",\")[1]).toFixed(2).toString()]);\n      });\n      if (coords[0] !== coords[coords.length - 1]){\n        coords.push(coords[0])\n      }\n      allcoords.push(coords)\n    }\n  });\n  return allcoords\n}\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\nexport const svgFragmentToPoints = annotation => {\n  const svgShape = svgFragmentToShape(annotation);\n  var polygon = svgShape.getAttribute('d')\n  var allcoords =  getPointsFromPathValue(polygon)\n  return allcoords\n  //svgShape.getAttribute('d')\n  //  .split(' ') // Split x/y tuples\n  //  .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n}\n\nconst drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n\n  // Hack\n  svgFragmentToPoints(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n\n  return g;\n}\n/**\n * An editable multipolygon drawing.\n */\nexport default class EditableMultipolygon extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n    let pointList = getPoints(this.shape);\n    this.handles = []\n    for (let points of pointList){\n      this.handles.push(points.map(pt => {\n        const handle = this.drawHandle(pt.x, pt.y);\n        handle.addEventListener('mousedown', this.onGrab(handle));\n        this.elementGroup.appendChild(handle);\n        return handle;\n      }))\n    } \n\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    const round = num =>\n    Math.round(10 * num) / 10;\n\n    let str = \"\"\n    for (let pointList of points){\n      str += \"M\"\n      let first = true \n      for (let point of pointList){\n        if (first){\n          first = false\n          str += point.x.toString() + \",\" + point.y.toString()\n        } else {\n          str += \" L\" + round(point.x).toString() + \",\" + round(point.y).toString()\n        }\n      }\n      str += \" Z\"\n    }\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    // this.mask.redraw();\n\n    const { x, y, width, height } = outer.getBBox();\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    if (this.grabbedElem) {\n\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.shape) {\n        const dx = pos.x - this.grabbedAt.x;\n        const dy = pos.y - this.grabbedAt.y;\n\n        let pointList = getPoints(this.shape)\n\n        const updatedPoints = []\n        for (let points of pointList){\n          updatedPoints.push(points.map(pt =>\n            ({ x: pt.x + dx, y: pt.y + dy })))\n        } \n    \n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n        let i = 0\n        for (let updatedPointsList of updatedPoints){\n            updatedPointsList.forEach((pt, idx) => { \n              if (this.handles[i][idx] !== undefined)\n                this.setHandleXY(this.handles[i][idx], pt.x, pt.y)\n            });\n            i+=1\n        }\n        \n        this.emit('update', {\n          ...toSVGTarget(this.shape, this.env.image),\n          renderedVia: {\n            name: 'multipolygon'\n          }\n        });\n      } else {\n        let handleIdx = -1\n        let pointListIDX = 0\n        let found = false\n\n        for (let handle of this.handles){\n          if (handle.indexOf(this.grabbedElem)>0){\n            handleIdx = handle.indexOf(this.grabbedElem);\n            found=true\n          } else {\n            if (!found){\n              pointListIDX += 1\n            }\n          }\n        }\n  \n        let pointList = getPoints(this.shape)\n  \n        const updatedPoints = []\n        let updatedPointsIDX = 0\n        for (let points of pointList){\n          if (updatedPointsIDX === pointListIDX){\n            let newPoints = []\n            points.forEach(function (value, i) {\n              if (i === handleIdx){\n                newPoints.push(pos)\n              } else {\n                newPoints.push(value)\n              }\n            });\n            updatedPoints.push(newPoints)\n          } else {\n            updatedPoints.push(points)\n          }\n          updatedPointsIDX +=1\n        } \n       \n        this.setPoints(updatedPoints);\n        updatedPointsIDX = 0\n        for (let handle of this.handles){\n          if (updatedPointsIDX === pointListIDX){\n\n            this.setHandleXY(handle[handleIdx], pos.x, pos.y);\n          }\n          updatedPointsIDX +=1\n\n        }\n        \n        this.emit('update', {\n          ...toSVGTarget(this.shape, this.env.image),\n          renderedVia: {\n            name: 'multipolygon'\n          }\n        });\n      }\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    const points = getPoints(svgFragmentToShape(annotation));\n    this.setPoints(points);\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandMultipolygon from './RubberbandMultipolygon';\nimport EditableMultipolygon from './EditableMultipolygon';\n\n/**\n * A rubberband selector for Multipolygon fragments.\n */\nexport default class RubberbandMultipolygonTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n    this._isDrawing = false;\n    document.addEventListener('keydown', evt => {\n      //console.log(\"keyDown Driggered\",evt);\n      if (evt.key == \"z\" && evt.ctrlKey) {\n        // console.log(\"doing undo\");\n        this.undo();\n      }\n      if (evt.key == 'n') {\n        //console.log(\"n recognized\");\n        this.newPart();\n      }\n    });  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandMultipolygon([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n  undo = () =>{\n    // console.log(\"rubberband undo\",this.rubberband);\n    if (this.rubberband){\n      this.rubberband.undo();\n\n    }\n    //console.log(this);\n  }\n  newPart = () =>{\n    if (this.rubberband){\n      this.rubberband.newPart();\n\n    }\n    //console.log(this);\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y, evt) => {\n    if (evt.altKey){\n      this.onDblClick(evt);\n    } else if (evt.ctrlKey) {\n      this.rubberband.undo();\n    } else{\n      const { width, height } = this.rubberband.getBoundingClientRect();\n\n      const minWidth = this.config.minSelectionWidth || 4;\n      const minHeight = this.config.minSelectionHeight || 4;\n      \n      if (width >= minWidth || height >= minHeight) {\n        this.rubberband.addPoint([ x, y ]);\n      } else {\n        this.emit('cancel');\n        this.stop();\n      }\n    }\n  }\n  \n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    const shape = this.rubberband.element;\n    shape.annotation = this.rubberband.toSelection();\n    this.emit('complete', shape);\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation => \n    new EditableMultipolygon(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandMultipolygonTool.identifier = 'multipolygon';\n\nRubberbandMultipolygonTool.supports = annotation => {\n  console.log(\"supports started\");\n  const selector = annotation.selector('SvgSelector');\n  console.log(\"selector\", selector);\n  console.log(selector.value?.match(/^<svg.*<path d=/g))\n  if (selector)\n    return selector.value?.match(/^<svg.*<path d=/g);\n}","import { Selection, ToolLike } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n//import Mask from './MultipolygonMask';\n// TODO optional: mask to dim the outside area\n//import Mask from './multipolygonMask';\n\n/**\n * A 'rubberband' selection tool for creating multipolygon drawing by\n * clicking and dragging.\n */\nexport default class RubberbandBetterMultipolygon extends ToolLike  {\n\n  constructor(anchor, g, config, env) {\n    super(g, config, env);\n    //super(g, config, env);\n    this.points = [];\n    this.points.push([ anchor, anchor ])\n    this.mousepos = anchor;\n\n    this.env = env;\n    this.scale = 1;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.multipolygon = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.multipolygon.setAttribute('class', 'a9s-selection a9s-multipolygon improved-polygon');\n\n    this.rubberband = document.createElementNS(SVG_NAMESPACE, 'polygon');\n    this.rubberband.setAttribute('class', 'a9s-rubberband');\n\n    this.closeHandle = this.drawHandle(anchor[0], anchor[1]);\n    this.closeHandle.style.display = 'none';\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n    //this.mask = new Mask(env.image, this.inner);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.inner);\n\n    this.multipolygon.appendChild(this.rubberband)\n    this.multipolygon.appendChild(this.outer);\n    this.multipolygon.appendChild(this.inner);\n    this.multipolygon.appendChild(this.closeHandle);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    // TODO optional: mask to dim the outside area\n    // this.group.appendChild(this.mask.element);\n    //this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.multipolygon);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var attr =\"\";\n    for (var ps of points){\n      var attr2=\"\"\n      if (ps.length>0){\n        for (var p of ps) {\n          if (p){\n            if (attr2===\"\"){\n              attr2  +=`M${p[0]},${p[1]}`;\n            }\n            else{\n              attr2  +=` L${p[0]},${p[1]}`;\n            }\n          }\n        };\n         attr+=attr2\n      }\n    }\n    attr+=\" Z\"\n    this.outer.setAttribute('d', attr);\n    this.inner.setAttribute('d', attr);\n  }\n  close = () => {\n    const multipolygon = new multipolygon(toSVGTarget(this.points, this.env.image));\n    this.emit('close', { shape: this.multipolygon, multipolygon });\n  }\n\n  getBoundingClientRect = () => {\n     return this.outer.getBoundingClientRect();\n  }\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n    this.mousepos = xy;\n    const head = this.points[this.points.length - 1].slice(0, this.points[this.points.length - 1].length - 1);\n    var headRest=this.points.slice(0,-1)\n    const rubberband = [ ...head, xy, head[0] ];\n    headRest.push(rubberband)\n    this.setPoints(headRest);\n    //this.mask.redraw();\n  }\n  onScaleChanged = scale => {\n    this.scale = scale;\n\n    const inner = this.closeHandle.querySelector('.a9s-handle-inner');\n    const outer = this.closeHandle.querySelector('.a9s-handle-outer');\n\n    const radius = scale * (this.config.handleRadius || 6);\n\n    inner.setAttribute('r', radius);\n    outer.setAttribute('r', radius);\n  }\n    \n  addPoint = xy => {\n    // Don't add a new point if distance < 2 pixels\n    if (this.points[this.points.length - 1].length>0){\n      const head = this.points[this.points.length - 1].slice(0, this.points[this.points.length - 1].length - 1);\n      const lastCorner = head[head.length - 1];\n      const dist = Math.pow(xy[0] - lastCorner[0], 2) + Math.pow(xy[1] - lastCorner[1], 2);\n      if (dist > 4) {\n        this.points[this.points.length - 1] = [ ...head, xy, head[0] ];\n        this.setPoints(this.points);   \n        //this.mask.redraw();\n      } \n    } else{\n      this.points[this.points.length - 1] = [xy,xy];\n      this.setPoints(this.points);\n    }\n  }\n  undo = () => {\n    this.pop()\n  }\n\n  isClosable = () => {\n    const d = this.getDistanceToStart();\n    return d < 6 * this.scale;\n  }\n  /** Removes last corner **/\n  pop = () => {\n    if (this.points[this.points.length - 1].length>2){\n      this.points[this.points.length - 1].pop();\n    } else {\n      if (this.points.length>1){\n        this.points.pop()\n      }\n    }\n    this.setPoints(this.points);\n    // this.mask.redraw();\n  }\n\n  newPart = () => {\n    this.points.push([]);\n  }\n \n  get element() {\n    return this.multipolygon;\n  }\n  getDistanceToStart = () => {\n    if (this.points[this.points.length-1].length < 3)\n      return Infinity; // Just return if not at least 3 points\n\n    const dx = Math.abs(this.mousepos[0] - this.points[this.points.length-1][0][0]);\n    const dy = Math.abs(this.mousepos[1] - this.points[this.points.length-1][0][1]);\n\n    return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2)) / this.scale;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.multipolygon = null;    \n    this.group = null;\n  }\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n}\n","/**\n * Computes the area of the polygon defined by\n * the given conrner points.\n * @param {Array} points \n * @returns {number} the area\n */\nexport const polygonArea = points => {\n  let area = 0;\n  let j = points.length - 1;\n\n  for (let i=0; i < points.length; i++) {\n    area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n    j = i;\n  }\n\n  return Math.abs(0.5 * area);\n}\n\n/**\n * Hit test: checks if this point is inside the circle.\n * @param {Array} point the point [x, y]\n * @param {number} cx circle center x\n * @param {number} cy circle center y\n * @param {number} r circle radius\n * @returns {boolean} \n */\nexport const pointInCircle = (point, cx, cy, r) => {\n  const dx = point[0] - cx;\n  const dy = point[1] - cy;\n\n  const d = Math.sqrt(dx * dx + dy * dy);\n  return d <= r;\n}\n\n/**\n * Hit test: checks if this point is inside the ellipse.\n * Cf. https://github.com/w8r/point-in-ellipse\n * @param {Array} point the point [x, y] \n * @param {number} cx ellipse center x \n * @param {number} cy ellipse center y\n * @param {number} rx ellipse x radius\n * @param {number} ry ellipse y radius\n * @param {number=} rotation ellipse rotation \n * @returns {boolean}\n */\nexport const pointInEllipse = (point, cx, cy, rx, ry, rotation) => {\n  const rot = rotation || 0;\n\n  const cos = Math.cos(rot);\n  const sin = Math.sin(rot);\n\n  const dx  = point[0] - cx;\n  const dy  = point[1] - cy;\n\n  const tdx = cos * dx + sin * dy;\n  const tdy = sin * dx - cos * dy;\n\n  return (tdx * tdx) / (rx * rx) + (tdy * tdy) / (ry * ry) <= 1;\n}\n\n/**\n * Hit test: checks if this point is inside the polygon.\n * @param {Array} xy the point [x, y]\n * @param {Array<number>} points polygon corner points \n * @returns {boolean}\n */\nexport const pointInsidePoygon = (point, polygon) => {\n  \n  var n=polygon.length,\n  is_in=false,\n  x=point[0],\n  y=point[1],\n  x1,x2,y1,y2;\n\nfor(var i=0; i < n-1; ++i){\n  x1=polygon[i][0];\n  x2=polygon[i+1][0];\n  y1=polygon[i][1];\n  y2=polygon[i+1][1];\n\n  if(y < y1 != y < y2 && x < (x2-x1) * (y-y1) / (y2-y1) + x1){\n      is_in=!is_in;\n  }\n}\n\nreturn is_in;\n};\n\nexport const isHole = (polygon1, polygon2) => {\n  // Algorithm checks, if polygon1 is in polygon2\n  for (var point of polygon1){\n    if (!pointInPolygon(point, polygon2)) return false\n  }\n  return true;\n}\n\nexport const pointInPolygon = (point, polygon) => {\n\n  var n=polygon.length,\n  is_in=false,\n  x=point[0],\n  y=point[1],\n  x1,x2,y1,y2;\n\n  for(var i=0; i < n-1; ++i){\n    x1=polygon[i][0];point\n    x2=polygon[i+1][0];\n    y1=polygon[i][1];\n    y2=polygon[i+1][1];\n\n    if(y < y1 != y < y2 && x < (x2-x1) * (y-y1) / (y2-y1) + x1){\n        is_in=!is_in;\n    }\n  }\n  return is_in;\n};\n\n\n/**\n * Checks if polygon A is contained fully inside polygon B.\n * @param {Array<Array<number>>} polygonA array of points [x, y] \n * @param {Array<Array<number>>} polygonB array of points [x, y]\n * @returns {boolean}\n */\nexport const polygonInPolygon = (polygonA, polygonB) => {\n  for (let point of polygonA) {\n    if (!pointInPolygon(point, polygonB)) \n      return false\n  }\n\n  return true;\n}\n\n/** \n * Hit test: checks if this point is inside the line.\n * @param {Array} xy the point [x, y]\n * @param number x1 line start x\n * @param number y1 line start y\n * @param number x2 line end x\n * @param number y2 line end y\n * @param number buffer around the line\n * @returns {boolean}\n */\nexport const pointInLine = (xy, x1, y1, x2, y2, buffer) => {\n  const x = xy[0];\n  const y = xy[1];\n\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const d = Math.sqrt(dx * dx + dy * dy);\n  const cross = Math.abs((x - x1) * dy - (y - y1) * dx);\n  const dist = cross / d;\n\n  return dist <= buffer;\n}\n\n/**\n * A utility helper that parses an SVG path into \n * a list of polygons.\n * @param {SVGElement} path the SVG path\n * @returns {Array<Array<Array<number>>>} list of polygons \n */\nexport const svgPathToPolygons = path => {\n  const commands = path.getAttribute('d')\n    .split(/(?=M|m|L|l|H|h|V|v|Z|z)/g)\n    .map(str => str.trim());\n  const polygons = [];\n\n  let points = [];\n\n  for (let cmd of commands) {\n    const op = cmd.substring(0, 1);\n    let xy\n    if (op.toLowerCase() === 'z') {\n      polygons.push([...points]);\n      points = [];\n    } else {\n      if (cmd.includes(\",\")){\n        xy = cmd.substring(1).split(',').map(str => parseFloat(str.trim()));\n      } else {\n        xy = cmd.substring(1).split(' ').map(str => parseFloat(str.trim()));\n\n      }\n      // Uppercase ops are absolute coords -> transform\n      const isUppercase = op === op.toUpperCase();\n\n      const x = isUppercase ? xy[0] : xy[0] + points[points.length - 1][0];\n      const y = isUppercase ? xy[1] : xy[1] + points[points.length - 1][1];\n\n      points.push([x, y]);\n    }\n  }\n\n  if (points.length > 0) // Unclosed path - close for area computation\n    polygons.push([...points]); \n  return polygons;\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { SVG_NAMESPACE, addClass, hasClass, removeClass } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { svgFragmentToShape } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { pointInPolygon } from '@recogito/annotorious/src/util/Geom2D';\nimport RubberbandBetterMultipolygon from './RubberbandBetterMultipolygon';\n\nimport { toSVGTarget, getPath } from './RubberbandBetterMultipolygonTool';\n\nconst getPointsFromPathValue = polygon => {\n  var results =polygon.split('M');\n  var allcoords = []\n  results.forEach(function (result, index) {\n    if (result.length>0){\n      let coords = []\n      result=result.replace(/ Z/g,\"Z\")\n      result=result.replace(/Z /g,\"Z\")\n      result=result.replace(/Z/g,\"\")\n      result=result.replace(/L /g,\"L\")\n      result=result.replace(/ L/g,\"L\")\n      var coordsString = result.split(\"L\")\n      coordsString.forEach(function(coord, index){\n        coords.push([parseFloat(coord.split(\",\")[0]).toFixed(2).toString(),parseFloat(coord.split(\",\")[1]).toFixed(2).toString()]);\n      });\n      if (coords[0][0] !== coords[coords.length - 1][0] && coords[0][1] !== coords[coords.length - 1][1]){\n        coords.push(coords[0])\n      }\n      allcoords.push(coords)\n    }\n  });\n  return allcoords\n}\n\n\nconst getPoints = (shape) => {\n  // Could just be Array.from(shape.querySelector('.inner').points) but...\n  // IE11 :-(\n  const pointLists = getPointsFromPathValue(shape.querySelector('.a9s-inner').attributes.d.nodeValue)\n  const pointArray = [];\n  for (let pointList of pointLists) {\n    let points = []\n    for (let point of pointList) {\n      let p = {\n        x:parseFloat(point[0]),\n        y:parseFloat(point[1])\n      }\n      points.push(p);\n    }\n    pointArray.push(points)\n  }\n  return pointArray;\n}\n\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\nexport const svgFragmentToPoints = annotation => {\n  const svgShape = svgFragmentToShape(annotation);\n  var polygon = svgShape.getAttribute('d')\n  var allcoords =  getPointsFromPathValue(polygon)\n  return allcoords\n}\n\nconst drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n  // Hack\n  svgFragmentToPoints(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n  return g;\n}\n  \nexport default class EditableBetterMultipolygon extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n    // This part is added to track time of annotation process. It is not confirm with W3C-Annotations\n    if (!this.annotation.underlying[\"generated\"]){\n      console.log(\"generated\", Date.now());\n      this.annotation.underlying[\"generated\"] = Date.now()\n    }\n    document.body.addEventListener('keydown', this.onKeyDown);\n\n    // Container wraps the mask + editable shape\n    this.container = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    // The editable shape group\n    this.shape = drawEmbeddedSVG(annotation);\n    this.shape.setAttribute('class', 'a9s-annotation editable selected improved-polygon');\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n    let cornerList = getPoints(this.shape);\n    this.cornerHandles = []\n    this.midpoints = []\n    for (let corners of cornerList){\n      let midpoints = []\n      this.cornerHandles.push(corners.map((pt, idx) => {\n        midpoints.push(this.createMidpoint(corners, idx));\n        const handle = this.createCornerHandle(pt);\n        return handle;\n      }))\n      this.midpoints.push(midpoints);\n    }\n    this.container.appendChild(this.elementGroup)\n    g.appendChild(this.container);\n    // Format needs to go after everything is added to the DOM\n    format(this.shape, annotation, config.formatter);\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    // Grabbed element and grab offset\n    this.grabbedElement = null;\n    this.grabbedAt = null;\n\n    // Selected corners\n    this.selected = [];\n\n    this.lastMouseDown = null;\n  }\n\n  createCornerHandle = pt => {\n    const handle = this.drawHandle(pt.x, pt.y);\n    handle.addEventListener('mousedown', this.onGrab(handle));\n    handle.addEventListener('click', this.onSelectCorner(handle));\n    this.scaleHandle(handle);\n\n    this.elementGroup.appendChild(handle);\n    return handle;\n  }\n\n  createMidpoint = (corners, idx) => {\n    // Create point between this and previous corner\n    const thisCorner = corners[idx];\n    const nextCorner = idx === corners.length - 1 ? corners[0] : corners[idx + 1];\n    const x = (thisCorner.x + nextCorner.x) / 2;\n    const y = (thisCorner.y + nextCorner.y) / 2;\n    const handle = this.drawMidpoint(x, y);\n    handle.addEventListener('mousedown', this.onGrab(handle));\n\n    this.shape.appendChild(handle);\n    return handle;\n  }\n\n  deleteSelected = () => {\n    console.log(\"delete selected\");\n    const points = getPoints(this.shape);\n    \n    if (this.selected.length > 0 ) {\n      let cornerhandlesIDX = -1\n      let updatedPoints = []\n      // Update midpoints\n      let newMidpoints = []\n      for (let midpointList of this.midpoints){\n        let updatedMidpointlist = midpointList.filter((object, i) => {\n          return this.selected.map(object => (object[0] === cornerhandlesIDX && object[1] === i)).indexOf(true) === -1\n        });      \n        let midpointsToDelete = midpointList.filter((object, i) => {\n          return this.selected.map(object => (object[0] === cornerhandlesIDX && object[1] === i)).indexOf(true) > -1\n        });\n        midpointsToDelete.forEach(h => h.parentNode.removeChild(h));\n        if (updatedMidpointlist.length > 2){\n          newMidpoints.push(updatedMidpointlist)\n        }\n      }\n      for (let pointList of points){\n        cornerhandlesIDX += 1\n        let updatedPointlist = pointList.filter((object, i) => {\n          return this.selected.map(object => (object[0] === cornerhandlesIDX && object[1] === i)).indexOf(true) === -1\n        });\n        if (updatedPointlist.length > 2){\n          updatedPoints.push(updatedPointlist)\n        }\n      }\n      cornerhandlesIDX = -1\n      let updatedHandles = []\n      for (let handlesList of this.cornerHandles){\n        cornerhandlesIDX += 1\n        let handlesToDelete = handlesList.filter((object, i) => {\n          if (this.selected.map(object => (object[0] === cornerhandlesIDX && object[1] === i)).indexOf(true) !== -1){\n            return true\n          } else {\n            return false\n          } \n        });\n        let handlesToStay = handlesList.filter((object, i) => {\n          return this.selected.map(object => (object[0] === cornerhandlesIDX && object[1] === i)).indexOf(true) === -1\n        });\n        if (handlesToStay.length > 2){\n          updatedHandles.push(handlesToStay)\n        }\n        handlesToDelete.forEach(h => h.parentNode.removeChild(h));\n      }\n      this.midpoints = newMidpoints\n      // Update corner handles\n\n      this.cornerHandles = updatedHandles\n      this.selected = []\n\n      this.setPoints(updatedPoints);\n      // this.emit('update', toSVGTarget(updatedPoints, this.env.image));\n    }\n  }\n\n  deselectCorners = () =>\n    this.cornerHandles.forEach(h => removeClass(h, 'selected'));\n\n  destroy = () => {\n    this.container.parentNode.removeChild(this.container);\n\n    this.svg.removeEventListener('mousemove', this.onMouseMove);\n    this.svg.removeEventListener('mouseup', this.onMouseUp);\n\n    document.body.removeEventListener('keydown', this.onKeyDown);\n\n    super.destroy();\n  }\n\n  drawMidpoint = (x, y) => {\n    const handle = document.createElementNS(SVG_NAMESPACE, 'circle');\n    handle.setAttribute('class', 'a9s-midpoint');\n    \n    handle.setAttribute('cx', x);\n    handle.setAttribute('cy', y);\n    handle.setAttribute('r', 5 * this.scale);\n\n    return handle;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  onAddPoint = pos => {\n    const corners = getPoints(this.shape);\n    let idx = -1\n    let midpointsIDX = -1\n    for (let midpointList of this.midpoints){\n      midpointsIDX += 1\n      idx = midpointList.indexOf(this.grabbedElement);\n      if (idx > -1){\n        break;\n      }\n    }\n    // Updated polygon points\n    let updatedCorners = []\n    let updatedcornerListIdx = -1\n    let midBefore = null\n    let midAfter = null\n    for (let cornerList of corners){\n      updatedcornerListIdx +=1\n      if (updatedcornerListIdx === midpointsIDX){\n        let updatedCornersList = []\n        let updatedcornerIdx = -1\n        for (let corner of cornerList){\n          updatedcornerIdx += 1\n          updatedCornersList.push(corner)     \n          if (updatedcornerIdx === idx){\n            updatedCornersList.push(pos)\n            midBefore = this.createMidpoint(cornerList, updatedcornerIdx -1);\n            midAfter = this.createMidpoint(cornerList, updatedcornerIdx);          \n          }\n        }\n        updatedCorners.push(updatedCornersList)\n      } else {\n        updatedCorners.push(cornerList)\n      }\n      \n    }\n\n    // New corner handle\n    const cornerHandle = this.createCornerHandle(pos);\n    this.cornerHandles[midpointsIDX] = [\n      ...this.cornerHandles[midpointsIDX].slice(0, idx+1),\n      cornerHandle,\n      ...this.cornerHandles[midpointsIDX].slice(idx+1)\n    ];\n    this.midpoints[midpointsIDX] = [\n      ...this.midpoints[midpointsIDX].slice(0, idx),\n      midBefore,\n      midAfter,\n      ...this.midpoints[midpointsIDX].slice(idx + 1)\n    ];\n    // Delete old midpoint\n    this.grabbedElement.parentNode.removeChild(this.grabbedElement);\n    \n    // Make the newly created corner dragged element + selection\n    this.grabbedElement = cornerHandle;\n    //this.onSelectCorner(cornerHandle)();\n\n    // Update shape\n    this.setPoints(updatedCorners);\n  }\n\n  onGrab = element => evt => {\n    if (evt.button !== 0) return;  // left click\n    evt.stopPropagation();\n\n    this.grabbedElement = element;\n    this.grabbedAt = this.getSVGPoint(evt);\n    this.lastMouseDown = new Date().getTime();\n  }\n\n  onKeyDown = ({ which }) => {\n    if (which === 46) {\n      this.deleteSelected();\n    }\n  }\n\n  onMoveShape = pos => {\n    const constrain = (coord, delta, max) =>\n      coord + delta < 0 ? -coord : (coord + delta > max ? max - coord : delta);\n    const { x, y, width, height } = getBBox(this.shape);\n    const { naturalWidth, naturalHeight } = this.env.image;\n\n    const dx = constrain(x, pos.x - this.grabbedAt.x, naturalWidth - width);\n    const dy = constrain(y, pos.y - this.grabbedAt.y, naturalHeight - height);\n    let updatedPoints = []\n    for (let pointlist of getPoints(this.shape)){\n      let newPointList = pointlist.map(pt => ([ pt.x , pt.y ]))\n      if (pointInPolygon([this.grabbedAt.x,this.grabbedAt.y], newPointList)){\n        updatedPoints.push(pointlist.map(pt =>\n          ({ x: pt.x + dx, y: pt.y + dy })))    \n      } else {\n        updatedPoints.push(pointlist)\n      }\n    }\n    this.grabbedAt = pos;\n\n    // Update shape\n    this.setPoints(updatedPoints);\n  }\n\n  onMoveCornerHandle = (pos, evt) => {\n    let handleIdx = -1\n    let cornerHandleIdx = 0\n    for (let cornerHandle of this.cornerHandles){\n      handleIdx = cornerHandle.indexOf(this.grabbedElement);\n      if (handleIdx > -1){ \n        break\n      } else {\n        cornerHandleIdx += 1\n      }\n    }\n    \n    // Update selection\n    if (evt.ctrlKey) {\n      this.selected = Array.from(new Set([...this.selected, handleIdx]));\n    } else if (!this.selected.includes(handleIdx)) {\n      this.selected = [ handleIdx ];\n    }\n\n    // Compute offsets between selected points from current selected\n    const points = getPoints(this.shape);\n\n    const distances = this.selected.map(idx => {\n      const handleXY = points[cornerHandleIdx][handleIdx];\n      const thisXY = points[cornerHandleIdx][idx];\n\n      return {\n        index: idx,\n        dx: thisXY.x - handleXY.x,\n        dy: thisXY.y - handleXY.y\n      }\n    });\n    let cornerHandleIdxUpdate = 0\n    let updatedPoints = []\n    for (let points of getPoints(this.shape)){\n      if (cornerHandleIdxUpdate === cornerHandleIdx){\n        let updatedPointList = points.map((pt, idx) => {\n          if (idx === handleIdx) {\n            // The dragged point\n            return pos;\n          } else if (this.selected.includes(idx)) {\n            const { dx, dy } = distances.find(d => d.index === idx);\n            return {\n              x: pos.x + dx,\n              y: pos.y + dy\n            }\n          } else {\n            // Unchanged\n            return pt;\n          }\n        });\n        updatedPoints.push(updatedPointList);\n      } else {\n        updatedPoints.push(points)\n      }\n      cornerHandleIdxUpdate += 1\n    }\n    this.setPoints(updatedPoints);\n  }\n\n  onMouseMove = evt => {\n    if (this.grabbedElement) {\n      const pos = this.getSVGPoint(evt);\n      if (this.grabbedElement === this.shape) {\n        this.onMoveShape(pos);\n      } else if (hasClass(this.grabbedElement, 'a9s-handle')) {\n        this.onMoveCornerHandle(pos, evt);\n      } else if (hasClass(this.grabbedElement, 'a9s-midpoint')) {\n        this.onAddPoint(pos);\n      }\n\n      this.emit('update', toSVGTarget(getPoints(this.shape), this.env.image));\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElement = null;\n    this.grabbedAt = null;\n  }\n\n  onScaleChanged = scale => {\n    for (let cornerHandle of this.cornerHandles){\n      cornerHandle.map(this.scaleHandle);\n    }\n    for (let midpoints of this.midpoints){\n      midpoints.map(midpoint => {\n        midpoint.setAttribute('r', 5 * this.scale);\n      });\n    }\n  }\n\n  onSelectCorner = handle => evt => {\n    const isDrag = new Date().getTime() - this.lastMouseDown > 250;\n\n    if (!isDrag) {\n      let cornerhandlesIDX = -1\n      let idx = -1\n      for (let corners of this.cornerHandles){\n        cornerhandlesIDX += 1\n        idx = corners.indexOf(handle);  \n        if (idx > 0) break\n      }\n\n      if (evt?.ctrlKey) {\n        // Toggle\n        if ( this.selected.map(object => (object[0] === cornerhandlesIDX && object[1] === idx)).indexOf(true) > -1) {\n          this.selected = this.selected.filter(i => {\n            return !(i[1] === idx && i[0] === cornerhandlesIDX)\n          });\n        } else \n          this.selected = [...this.selected, [cornerhandlesIDX, idx]];\n      } else { \n        if (this.selected.length === 1 && (this.selected[0][1] === idx && this.selected[0][0] === cornerhandlesIDX)) {\n          this.selected = [];\n        } else {\n          this.selected = [[cornerhandlesIDX, idx ]];\n        }\n      }\n\n      this.setPoints(getPoints(this.shape));\n    }\n  }\n\n  setPoints = points => {\n    // Not using .toFixed(1) because that will ALWAYS\n    // Set polygon points\n    const str = getPath(points);\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    // Corner handles\n    let cornerIdx = 0\n    for (let pointList of points){\n      console.log(\"pointList of points\", pointList, points);\n      pointList.forEach((pt, idx) => {\n        this.setHandleXY(this.cornerHandles[cornerIdx][idx], pt.x, pt.y)\n      });\n    // Midpoints\n      for (let idx=0; idx<pointList.length; idx++) {\n        const thisCorner = pointList[idx];\n        const nextCorner = idx === pointList.length - 1 ? pointList[0] : pointList[idx + 1];\n        const x = (thisCorner.x + nextCorner.x) / 2;\n        const y = (thisCorner.y + nextCorner.y) / 2;\n\n        const handle = this.midpoints[cornerIdx][idx];\n        handle.setAttribute('cx', x);\n        handle.setAttribute('cy', y);\n      }\n        cornerIdx +=1\n    }\n    let cornerHandleIdx = -1\n    for (let corners of this.cornerHandles){\n      cornerHandleIdx += 1\n\n      corners.forEach((handle, i) => {\n        \n        const isSelected = this.selected.map(object => (object[0] === cornerHandleIdx && object[1] === i)).indexOf(true) > -1;\n        if (isSelected && !hasClass(handle, 'selectedCorner')) {\n          addClass(handle, 'selectedCorner');\n        } else if (!isSelected && hasClass(handle, 'selectedCorner')) {\n          removeClass(handle, 'selectedCorner');\n        }\n      });  \n    }\n\n    // Resize formatter elements\n    const { x, y, width, height } = outer.getBBox();\n    setFormatterElSize(this.shape, x, y, width, height);\n  }\n\n  updateState = annotation => {\n    const shape = drawEmbeddedSVG(annotation);\n    const points = getPoints(shape);\n    this.setPoints(points);\n  }\n\n}","import RBush from 'rbush';\nimport Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandBetterMultipolygon from './RubberbandBetterMultipolygon';\nimport EditableBetterMultipolygon from './EditableBetterMultipolygon';\nimport { isTouchDevice } from '@recogito/annotorious/src/util/Touch';\n\n/**\n * A rubberband selector for Multipolygon fragments.\n */\nclass MyRBush extends RBush {\n  toBBox([x, y]) { return {minX: x, minY: y, maxX: x, maxY: y}; }\n  compareMinX(a, b) { return a.x - b.x; }\n  compareMinY(a, b) { return a.y - b.y; }\n}\n\nconst isTouch = isTouchDevice();\nexport const getPath = (points) => {\n  const round = num => Math.round(10 * num) / 10;\n  let path = \"\"\n  for (let pointList of points){\n    path += \"M\"\n    let first = true \n    for (let point of pointList){\n      if (first){\n        first = false\n        path += round(point.x).toString() + \",\" + round(point.y).toString()\n      } else {\n        path += \" L\" + round(point.x).toString() + \",\" + round(point.y).toString()\n      }\n    }\n    path += \" Z\"\n  }\n  return path\n}\nexport const toSVGTarget = (points, image) => ({\n  source: image?.src,\n  selector: {\n    type: \"SvgSelector\",\n    value: `<svg><path d=\"${getPath(points)}\" /></svg>`\n  }\n});\n\nexport default class RubberbandBetterMultipolygonTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n    this._isDrawing = false;\n    this.startTime = -1\n    this.contourPointsFunc = null\n    this.contourPoints = []\n    this.contourPointsRBush = new MyRBush()\n    this.viewer = null\n    window.addEventListener('keydown', evt => {\n      if (evt.key === \"z\" && evt.ctrlKey) {\n        this.undo();\n      } else if (evt.key === 'n' || evt.key === 'p') {\n        this.newPart();\n      }\n    },true);\n    this._startOnSingleClick = false;\n  }\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  startDrawing = (x, y, startOnSingleClick, evt, contourPoints) => {\n    this._isDrawing = true\n    console.log(\"start drawing. startTime:\", Date.now());\n    this.startTime = Date.now()\n    this.contourPoints = contourPoints;\n    if (!startOnSingleClick){\n      this._startOnSingleClick = false \n    } else {\n      this._startOnSingleClick = startOnSingleClick;\n    }\n    // this.svg.addEventListener('mousedown', this.onMouseDown);\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandBetterMultipolygon([ x, y ], this.g, this.config, this.env);\n    this.rubberband.on('close', ({ shape, selection }) => {\n      shape.annotation = selection;\n      this.emit('complete', shape);  \n      this.stop();\n    }); \n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n  undo = () =>{\n    if (this.rubberband){\n      this.rubberband.undo();\n\n    }\n  }\n\n\n  newPart = () =>{\n    if (this.rubberband){\n      this.rubberband.newPart();\n\n    }\n  }\n\n  onMouseMove = (x, y, evt) => {\n    this.rubberband.dragTo([ x, y ]);\n    if (false){\n      if (this.contourPoints){\n        if (this.contourPoints.length !== 0){\n          if (this.contourPoints.length > 0){\n            const closest = this.contourPointsRBush.search({\n              minX: (x - 10),\n              minY: (y - 10),\n              maxX: (x + 10),\n              maxY: (y + 10)\n            })\n            let closestPoint = {\n              \"point\": [0,0],\n              \"dist\": 100\n            }\n            for (const closePoint of closest){\n              const dist = Math.hypot(x-closePoint[0], y-closePoint[1])\n              \n              if (dist < closestPoint.dist){\n                closestPoint.point = closePoint\n                closestPoint.dist = dist\n              }\n            }\n            if (closestPoint.dist < 5){\n              this.rubberband.addPoint([ x, y ]);\n            }\n  \n          }\n        } else {\n        }\n      }\n    }\n  }\n  setContourPoints(contourPoints, viewer){\n    this.contourPointsFunc = contourPoints\n    this.viewer = viewer\n  }\n\n  onMouseUp = (x, y, evt) => {\n    if (evt.altKey){\n      this.onDblClickOld(evt);\n    } else if (evt.ctrlKey) {\n      this.rubberband.undo();\n    } else if (evt.shiftKey && this.rubberband.points.length>2) {\n      this.newPart();\n    } else{\n      const { width, height } = this.rubberband.getBoundingClientRect();\n\n      const minWidth = this.config.minSelectionWidth || 4;\n      const minHeight = this.config.minSelectionHeight || 4;\n      if (width >= minWidth || height >= minHeight) {\n        this.rubberband.addPoint([ x, y ]);\n      } else {\n        this.emit('cancel');\n        this.stop();\n      }\n    }\n  }\n  onScaleChanged = scale => {\n    \n    if (this.rubberband)\n      this.rubberband.onScaleChanged(scale);\n  }\n  onDblClickOld = (x, y) => {\n    this._isDrawing = false;\n    this.rubberband.addPoint([ x, y ]);\n\n    const shape = this.rubberband.element;\n    shape.annotation = this.rubberband.toSelection();\n    shape.annotation.underlying[\"generated\"] = this.startTime;\n    this.emit('complete', shape);\n\n    this.stop();\n  }\n\n  onDblClick = (x, y) => {\n  }\n\n  createEditableShape = annotation => \n    new EditableBetterMultipolygon(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandBetterMultipolygonTool.identifier = 'bettermultipolygon';\n\nRubberbandBetterMultipolygonTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<path d=/g);\n}","import PointTool from './point/PointTool';\nimport RubberbandCircleTool from './circle/RubberbandCircleTool';\nimport RubberbandEllipseTool from './ellipse/RubberbandEllipseTool';\nimport RubberbandFreehandTool from './freehand/RubberbandFreehandTool';\nimport RubberbandMultipolygonTool from './multipolygon/RubberbandMultipolygonTool';\nimport RubberbandBetterMultipolygonTool from './betterMultipolygon/RubberbandBetterMultipolygonTool';\n\nconst ALL_TOOLS = new Set([\n  'point',\n  'circle',\n  'ellipse',\n  'freehand',\n  // 'multipolygon',\n  'bettermultipolygon'\n]);\n\nconst SelectorPack = (anno, config) => {\n\n  // Add configured tools, or all\n  const useTools = config?.tools ? \n    new Set(config.tools.map(t => t.toLowerCase())) : ALL_TOOLS;\n  if (useTools.has('circle'))\n    anno.addDrawingTool(RubberbandCircleTool);\n\n  if (useTools.has('point'))\n    anno.addDrawingTool(PointTool);\n\n  if (useTools.has('ellipse'))\n    anno.addDrawingTool(RubberbandEllipseTool);\n  \n  if (useTools.has('freehand'))\n    anno.addDrawingTool(RubberbandFreehandTool);\n  if (useTools.has('bettermultipolygon')){\n    anno.addDrawingTool(RubberbandBetterMultipolygonTool);\n  }\n  if (useTools.has('multipolygon'))\n  anno.addDrawingTool(RubberbandBetterMultipolygonTool);\n\n}\n\nexport default SelectorPack;\n"],"names":["root","factory","exports","module","define","amd","self","i","t","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","max","floor","min","p","d","x","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","m","c","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","E","on","name","callback","ctx","fn","once","listener","off","arguments","_","emit","call","evtArr","len","evts","liveEvents","TinyEmitter","equal","b","constructor","keys","Array","isArray","RegExp","source","flags","valueOf","Object","toString","hasOwnProperty","key","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","defineProperty","enumerable","get","obj","prop","getRandomValues","isTouchDevice","window","navigator","maxTouchPoints","msMaxTouchPoints","SVG_NAMESPACE","getClassNames","el","attr","getAttribute","Set","split","addClass","className","classNames","add","setAttribute","from","join","removeClass","size","removeAttribute","hasClass","has","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","byteToHex","substr","arr","offset","uuid","toLowerCase","REGEX","validate","TypeError","options","buf","rnds","random","stringify","WebAnnotation","annotation","opts","opt_props","opt_opts","underlying","type","target","selector","find","other","id","equals","style","readOnly","motivation","body","bodies","state","entries","value","exact","start","end","args","stub","Selection","cloned","JSON","parse","assign","IMPLEMENTATION_MISSING","isTouch","ToolLike","g","config","env","ResizeObserver","resizeObserver","svgBounds","svg","getBoundingClientRect","viewBox","baseVal","width","scale","onScaleChanged","observe","parentNode","evt","pt","createSVGPoint","bbox","clientX","y","clientY","left","top","matrixTransform","getScreenCTM","inverse","offsetX","offsetY","getCTM","containerGroup","document","createElementNS","group","drawCircle","radius","handleRadius","inner","outer","appendChild","handle","querySelector","parseFloat","contourPoints","closest","image","Element","HTMLDocument","enableResponsive","disconnect","EventEmitter","Tool","mouseMove","mouseUp","dblClick","console","getSVGPoint","started","addEventListener","button","removeEventListener","startOnSingleClick","contourpoints","startDrawing","formatters","supports","EditableShape","parseRectFragment","conformsTo","startsWith","format","includes","substring","map","w","naturalWidth","naturalHeight","toFragment","fragmentUnit","px","py","pw","ph","src","toPercentRectFragment","toPixelRectFragment","toRectFragment","renderedVia","EditablePoint","scaleHandle","point","isGrabbed","setHandleXY","onMouseMove","onMouseUp","container","elementGroup","drawHandle","onGrab","removeChild","PointTool","isPoint","element","identifier","sanitize","doc","cleanEl","attributes","forEach","scripts","getElementsByTagName","reverse","querySelectorAll","svgFragmentToShape","originalDoc","namespaced","parser","DOMParser","parseFromString","isPrefixDeclared","lookupPrefix","isDefaultNamespaceSVG","lookupNamespaceURI","firstChild","XMLSerializer","serializeToString","documentElement","replace","drawEmbeddedSVG","shape","cloneNode","toSVGTarget","serialized","outerHTML","setXYR","setCircleSize","cx","cy","innerCircle","outerCircle","getCircleSize","CircleMask","imageDimensions","circle","tx","ty","mask","RubberbandCircle","anchorX","anchorY","oppositeX","oppositeY","display","anchor","redraw","Mask","pointerEvents","isFirefox","test","userAgent","formatSvgEl","svgEl","reduce","merged","String","nodeType","Node","ELEMENT_NODE","elements","formatterEl","getBBox","append","appendFormatterEl","setFormatterElSize","EditableCircle","handles","topleft","topright","bottomright","bottomleft","draggedHandleIdx","anchorHandle","mousePos","getHandleXY","mouseX","mouseY","abs","idx0","idx2","idx3","idx1","grabbedElem","pos","grabbedAt","constrain","coord","setSize","handleIdx","oppositeHandle","stretchCorners","formatter","RubberbandCircleTool","attachListeners","rubberband","destroy","dragTo","detachListeners","minWidth","minSelectionWidth","minHeight","minSelectionHeight","toSelection","stop","match","rx","ry","setEllipseSize","innerEllipse","outerEllipse","getEllipseSize","EllipseMask","ellipse","RubberbandEllipse","drawEllipse","EditableEllipse","leftHandle","anchorLeft","RubberbandEllipseTool","RubberbandFreehand","points","str","xy","addPoint","setPoints","freehand","getPoints","pointList","trim","EditableFreehand","round","num","delta","dx","dy","updatedPoints","RubberbandFreehandTool","_isDrawing","onDblClick","toUpperCase","RubberbandMultipolygon","ps","attr2","head","headRest","lastCorner","multipolygon","pointArray","getPointsFromPathValue","nodeValue","polygon","results","allcoords","result","index","coords","toFixed","EditableMultipolygon","first","idx","pointListIDX","found","updatedPointsIDX","newPoints","svgFragmentToPoints","RubberbandMultipolygonTool","undo","newPart","altKey","ctrlKey","RubberbandBetterMultipolygon","mousepos","closeHandle","getDistanceToStart","Infinity","pointInPolygon","x1","x2","y1","y2","is_in","EditableBetterMultipolygon","onSelectCorner","corners","thisCorner","nextCorner","drawMidpoint","selected","cornerhandlesIDX","newMidpoints","midpoints","midpointList","updatedMidpointlist","filter","object","midpointsToDelete","updatedPointlist","updatedHandles","cornerHandles","handlesList","handlesToDelete","handlesToStay","onKeyDown","midpointsIDX","grabbedElement","updatedCorners","updatedcornerListIdx","midBefore","midAfter","cornerList","updatedCornersList","updatedcornerIdx","corner","createMidpoint","cornerHandle","createCornerHandle","stopPropagation","lastMouseDown","Date","getTime","which","deleteSelected","pointlist","newPointList","cornerHandleIdx","distances","handleXY","thisXY","cornerHandleIdxUpdate","updatedPointList","onMoveShape","onMoveCornerHandle","onAddPoint","midpoint","getPath","cornerIdx","isSelected","now","MyRBush","RBush","path","RubberbandBetterMultipolygonTool","startTime","_startOnSingleClick","selection","onDblClickOld","shiftKey","contourPointsFunc","contourPointsRBush","viewer","ALL_TOOLS","anno","useTools","tools","addDrawingTool"],"sourceRoot":""}